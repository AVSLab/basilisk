%{{
#include "../dist3/autoSource/cMsgCInterface/{type}_C.h"
%}}
%include "../dist3/autoSource/cMsgCInterface/{type}_C.h"
%include "../Msg2Header.h"
typedef struct {type};
%extend {type}_C {{
    %pythoncode %{{

    def subscribeTo(self, source):
        from Basilisk.simulation.messaging2 import {type}
        if type(source) == type(self):
            {type}_C_subscribe(self, source)
        elif type(source) == {type}:
            {type}_cpp_subscribe(self, source)
        else:
            raise Exception('tried to subscribe {type} to another message type')

    def log(self):
        from Basilisk.simulation.messaging2 import {type}Logger
        return {type}Logger(self)

    def write(self, payload, time=0):
        """write the message payload.  The second argument is time in nanoseconds.  It is optional and defaults to 0."""
        {type}_C_addAuthor(self, self)
        {type}_C_write(payload, self, -1, time)  # msgs written in Python have -1 module ID
        return self

    def read(self):
        """read the message payload."""
        self.subscribeTo(self)
        return {type}_C_read(self)
    %}}
}};
