// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vizMessage.proto

#ifndef PROTOBUF_vizMessage_2eproto__INCLUDED
#define PROTOBUF_vizMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_vizMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[15];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsVizMessage_TimeStampImpl();
void InitDefaultsVizMessage_TimeStamp();
void InitDefaultsVizMessage_CelestialBodyImpl();
void InitDefaultsVizMessage_CelestialBody();
void InitDefaultsVizMessage_SpacecraftImpl();
void InitDefaultsVizMessage_Spacecraft();
void InitDefaultsVizMessage_ReactionWheelImpl();
void InitDefaultsVizMessage_ReactionWheel();
void InitDefaultsVizMessage_ThrusterImpl();
void InitDefaultsVizMessage_Thruster();
void InitDefaultsVizMessage_CoarseSunSensorImpl();
void InitDefaultsVizMessage_CoarseSunSensor();
void InitDefaultsVizMessage_StarTrackerImpl();
void InitDefaultsVizMessage_StarTracker();
void InitDefaultsVizMessage_CameraConfigImpl();
void InitDefaultsVizMessage_CameraConfig();
void InitDefaultsVizMessage_PointLineImpl();
void InitDefaultsVizMessage_PointLine();
void InitDefaultsVizMessage_KeepOutInConeImpl();
void InitDefaultsVizMessage_KeepOutInCone();
void InitDefaultsVizMessage_StandardCameraSettingsImpl();
void InitDefaultsVizMessage_StandardCameraSettings();
void InitDefaultsVizMessage_ActuatorSettingsImpl();
void InitDefaultsVizMessage_ActuatorSettings();
void InitDefaultsVizMessage_CustomModelImpl();
void InitDefaultsVizMessage_CustomModel();
void InitDefaultsVizMessage_VizSettingsPbImpl();
void InitDefaultsVizMessage_VizSettingsPb();
void InitDefaultsVizMessageImpl();
void InitDefaultsVizMessage();
inline void InitDefaults() {
  InitDefaultsVizMessage_TimeStamp();
  InitDefaultsVizMessage_CelestialBody();
  InitDefaultsVizMessage_Spacecraft();
  InitDefaultsVizMessage_ReactionWheel();
  InitDefaultsVizMessage_Thruster();
  InitDefaultsVizMessage_CoarseSunSensor();
  InitDefaultsVizMessage_StarTracker();
  InitDefaultsVizMessage_CameraConfig();
  InitDefaultsVizMessage_PointLine();
  InitDefaultsVizMessage_KeepOutInCone();
  InitDefaultsVizMessage_StandardCameraSettings();
  InitDefaultsVizMessage_ActuatorSettings();
  InitDefaultsVizMessage_CustomModel();
  InitDefaultsVizMessage_VizSettingsPb();
  InitDefaultsVizMessage();
}
}  // namespace protobuf_vizMessage_2eproto
namespace vizProtobufferMessage {
class VizMessage;
class VizMessageDefaultTypeInternal;
extern VizMessageDefaultTypeInternal _VizMessage_default_instance_;
class VizMessage_ActuatorSettings;
class VizMessage_ActuatorSettingsDefaultTypeInternal;
extern VizMessage_ActuatorSettingsDefaultTypeInternal _VizMessage_ActuatorSettings_default_instance_;
class VizMessage_CameraConfig;
class VizMessage_CameraConfigDefaultTypeInternal;
extern VizMessage_CameraConfigDefaultTypeInternal _VizMessage_CameraConfig_default_instance_;
class VizMessage_CelestialBody;
class VizMessage_CelestialBodyDefaultTypeInternal;
extern VizMessage_CelestialBodyDefaultTypeInternal _VizMessage_CelestialBody_default_instance_;
class VizMessage_CoarseSunSensor;
class VizMessage_CoarseSunSensorDefaultTypeInternal;
extern VizMessage_CoarseSunSensorDefaultTypeInternal _VizMessage_CoarseSunSensor_default_instance_;
class VizMessage_CustomModel;
class VizMessage_CustomModelDefaultTypeInternal;
extern VizMessage_CustomModelDefaultTypeInternal _VizMessage_CustomModel_default_instance_;
class VizMessage_KeepOutInCone;
class VizMessage_KeepOutInConeDefaultTypeInternal;
extern VizMessage_KeepOutInConeDefaultTypeInternal _VizMessage_KeepOutInCone_default_instance_;
class VizMessage_PointLine;
class VizMessage_PointLineDefaultTypeInternal;
extern VizMessage_PointLineDefaultTypeInternal _VizMessage_PointLine_default_instance_;
class VizMessage_ReactionWheel;
class VizMessage_ReactionWheelDefaultTypeInternal;
extern VizMessage_ReactionWheelDefaultTypeInternal _VizMessage_ReactionWheel_default_instance_;
class VizMessage_Spacecraft;
class VizMessage_SpacecraftDefaultTypeInternal;
extern VizMessage_SpacecraftDefaultTypeInternal _VizMessage_Spacecraft_default_instance_;
class VizMessage_StandardCameraSettings;
class VizMessage_StandardCameraSettingsDefaultTypeInternal;
extern VizMessage_StandardCameraSettingsDefaultTypeInternal _VizMessage_StandardCameraSettings_default_instance_;
class VizMessage_StarTracker;
class VizMessage_StarTrackerDefaultTypeInternal;
extern VizMessage_StarTrackerDefaultTypeInternal _VizMessage_StarTracker_default_instance_;
class VizMessage_Thruster;
class VizMessage_ThrusterDefaultTypeInternal;
extern VizMessage_ThrusterDefaultTypeInternal _VizMessage_Thruster_default_instance_;
class VizMessage_TimeStamp;
class VizMessage_TimeStampDefaultTypeInternal;
extern VizMessage_TimeStampDefaultTypeInternal _VizMessage_TimeStamp_default_instance_;
class VizMessage_VizSettingsPb;
class VizMessage_VizSettingsPbDefaultTypeInternal;
extern VizMessage_VizSettingsPbDefaultTypeInternal _VizMessage_VizSettingsPb_default_instance_;
}  // namespace vizProtobufferMessage
namespace vizProtobufferMessage {

// ===================================================================

class VizMessage_TimeStamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.TimeStamp) */ {
 public:
  VizMessage_TimeStamp();
  virtual ~VizMessage_TimeStamp();

  VizMessage_TimeStamp(const VizMessage_TimeStamp& from);

  inline VizMessage_TimeStamp& operator=(const VizMessage_TimeStamp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_TimeStamp(VizMessage_TimeStamp&& from) noexcept
    : VizMessage_TimeStamp() {
    *this = ::std::move(from);
  }

  inline VizMessage_TimeStamp& operator=(VizMessage_TimeStamp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_TimeStamp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_TimeStamp* internal_default_instance() {
    return reinterpret_cast<const VizMessage_TimeStamp*>(
               &_VizMessage_TimeStamp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VizMessage_TimeStamp* other);
  friend void swap(VizMessage_TimeStamp& a, VizMessage_TimeStamp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_TimeStamp* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_TimeStamp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_TimeStamp& from);
  void MergeFrom(const VizMessage_TimeStamp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_TimeStamp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 frameNumber = 1;
  void clear_framenumber();
  static const int kFrameNumberFieldNumber = 1;
  ::google::protobuf::int64 framenumber() const;
  void set_framenumber(::google::protobuf::int64 value);

  // double simTimeElapsed = 2;
  void clear_simtimeelapsed();
  static const int kSimTimeElapsedFieldNumber = 2;
  double simtimeelapsed() const;
  void set_simtimeelapsed(double value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.TimeStamp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 framenumber_;
  double simtimeelapsed_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_TimeStampImpl();
};
// -------------------------------------------------------------------

class VizMessage_CelestialBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.CelestialBody) */ {
 public:
  VizMessage_CelestialBody();
  virtual ~VizMessage_CelestialBody();

  VizMessage_CelestialBody(const VizMessage_CelestialBody& from);

  inline VizMessage_CelestialBody& operator=(const VizMessage_CelestialBody& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_CelestialBody(VizMessage_CelestialBody&& from) noexcept
    : VizMessage_CelestialBody() {
    *this = ::std::move(from);
  }

  inline VizMessage_CelestialBody& operator=(VizMessage_CelestialBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_CelestialBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_CelestialBody* internal_default_instance() {
    return reinterpret_cast<const VizMessage_CelestialBody*>(
               &_VizMessage_CelestialBody_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VizMessage_CelestialBody* other);
  friend void swap(VizMessage_CelestialBody& a, VizMessage_CelestialBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_CelestialBody* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_CelestialBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_CelestialBody& from);
  void MergeFrom(const VizMessage_CelestialBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_CelestialBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double position = 2;
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  double position(int index) const;
  void set_position(int index, double value);
  void add_position(double value);
  const ::google::protobuf::RepeatedField< double >&
      position() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_position();

  // repeated double velocity = 3;
  int velocity_size() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 3;
  double velocity(int index) const;
  void set_velocity(int index, double value);
  void add_velocity(double value);
  const ::google::protobuf::RepeatedField< double >&
      velocity() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_velocity();

  // repeated double rotation = 4;
  int rotation_size() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  double rotation(int index) const;
  void set_rotation(int index, double value);
  void add_rotation(double value);
  const ::google::protobuf::RepeatedField< double >&
      rotation() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_rotation();

  // string bodyName = 1;
  void clear_bodyname();
  static const int kBodyNameFieldNumber = 1;
  const ::std::string& bodyname() const;
  void set_bodyname(const ::std::string& value);
  #if LANG_CXX11
  void set_bodyname(::std::string&& value);
  #endif
  void set_bodyname(const char* value);
  void set_bodyname(const char* value, size_t size);
  ::std::string* mutable_bodyname();
  ::std::string* release_bodyname();
  void set_allocated_bodyname(::std::string* bodyname);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.CelestialBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > velocity_;
  mutable int _velocity_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > rotation_;
  mutable int _rotation_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr bodyname_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_CelestialBodyImpl();
};
// -------------------------------------------------------------------

class VizMessage_Spacecraft : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.Spacecraft) */ {
 public:
  VizMessage_Spacecraft();
  virtual ~VizMessage_Spacecraft();

  VizMessage_Spacecraft(const VizMessage_Spacecraft& from);

  inline VizMessage_Spacecraft& operator=(const VizMessage_Spacecraft& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_Spacecraft(VizMessage_Spacecraft&& from) noexcept
    : VizMessage_Spacecraft() {
    *this = ::std::move(from);
  }

  inline VizMessage_Spacecraft& operator=(VizMessage_Spacecraft&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_Spacecraft& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_Spacecraft* internal_default_instance() {
    return reinterpret_cast<const VizMessage_Spacecraft*>(
               &_VizMessage_Spacecraft_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(VizMessage_Spacecraft* other);
  friend void swap(VizMessage_Spacecraft& a, VizMessage_Spacecraft& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_Spacecraft* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_Spacecraft* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_Spacecraft& from);
  void MergeFrom(const VizMessage_Spacecraft& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_Spacecraft* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double position = 2;
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  double position(int index) const;
  void set_position(int index, double value);
  void add_position(double value);
  const ::google::protobuf::RepeatedField< double >&
      position() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_position();

  // repeated double velocity = 3;
  int velocity_size() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 3;
  double velocity(int index) const;
  void set_velocity(int index, double value);
  void add_velocity(double value);
  const ::google::protobuf::RepeatedField< double >&
      velocity() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_velocity();

  // repeated double rotation = 4;
  int rotation_size() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  double rotation(int index) const;
  void set_rotation(int index, double value);
  void add_rotation(double value);
  const ::google::protobuf::RepeatedField< double >&
      rotation() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_rotation();

  // repeated .vizProtobufferMessage.VizMessage.ReactionWheel reactionWheels = 5;
  int reactionwheels_size() const;
  void clear_reactionwheels();
  static const int kReactionWheelsFieldNumber = 5;
  const ::vizProtobufferMessage::VizMessage_ReactionWheel& reactionwheels(int index) const;
  ::vizProtobufferMessage::VizMessage_ReactionWheel* mutable_reactionwheels(int index);
  ::vizProtobufferMessage::VizMessage_ReactionWheel* add_reactionwheels();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ReactionWheel >*
      mutable_reactionwheels();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ReactionWheel >&
      reactionwheels() const;

  // repeated .vizProtobufferMessage.VizMessage.Thruster thrusters = 6;
  int thrusters_size() const;
  void clear_thrusters();
  static const int kThrustersFieldNumber = 6;
  const ::vizProtobufferMessage::VizMessage_Thruster& thrusters(int index) const;
  ::vizProtobufferMessage::VizMessage_Thruster* mutable_thrusters(int index);
  ::vizProtobufferMessage::VizMessage_Thruster* add_thrusters();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Thruster >*
      mutable_thrusters();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Thruster >&
      thrusters() const;

  // repeated .vizProtobufferMessage.VizMessage.CoarseSunSensor CSS = 7;
  int css_size() const;
  void clear_css();
  static const int kCSSFieldNumber = 7;
  const ::vizProtobufferMessage::VizMessage_CoarseSunSensor& css(int index) const;
  ::vizProtobufferMessage::VizMessage_CoarseSunSensor* mutable_css(int index);
  ::vizProtobufferMessage::VizMessage_CoarseSunSensor* add_css();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CoarseSunSensor >*
      mutable_css();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CoarseSunSensor >&
      css() const;

  // repeated .vizProtobufferMessage.VizMessage.StarTracker starTrackers = 8;
  int startrackers_size() const;
  void clear_startrackers();
  static const int kStarTrackersFieldNumber = 8;
  const ::vizProtobufferMessage::VizMessage_StarTracker& startrackers(int index) const;
  ::vizProtobufferMessage::VizMessage_StarTracker* mutable_startrackers(int index);
  ::vizProtobufferMessage::VizMessage_StarTracker* add_startrackers();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StarTracker >*
      mutable_startrackers();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StarTracker >&
      startrackers() const;

  // string spacecraftName = 1;
  void clear_spacecraftname();
  static const int kSpacecraftNameFieldNumber = 1;
  const ::std::string& spacecraftname() const;
  void set_spacecraftname(const ::std::string& value);
  #if LANG_CXX11
  void set_spacecraftname(::std::string&& value);
  #endif
  void set_spacecraftname(const char* value);
  void set_spacecraftname(const char* value, size_t size);
  ::std::string* mutable_spacecraftname();
  ::std::string* release_spacecraftname();
  void set_allocated_spacecraftname(::std::string* spacecraftname);

  // string spacecraftSprite = 9;
  void clear_spacecraftsprite();
  static const int kSpacecraftSpriteFieldNumber = 9;
  const ::std::string& spacecraftsprite() const;
  void set_spacecraftsprite(const ::std::string& value);
  #if LANG_CXX11
  void set_spacecraftsprite(::std::string&& value);
  #endif
  void set_spacecraftsprite(const char* value);
  void set_spacecraftsprite(const char* value, size_t size);
  ::std::string* mutable_spacecraftsprite();
  ::std::string* release_spacecraftsprite();
  void set_allocated_spacecraftsprite(::std::string* spacecraftsprite);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.Spacecraft)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > velocity_;
  mutable int _velocity_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > rotation_;
  mutable int _rotation_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ReactionWheel > reactionwheels_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Thruster > thrusters_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CoarseSunSensor > css_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StarTracker > startrackers_;
  ::google::protobuf::internal::ArenaStringPtr spacecraftname_;
  ::google::protobuf::internal::ArenaStringPtr spacecraftsprite_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_SpacecraftImpl();
};
// -------------------------------------------------------------------

class VizMessage_ReactionWheel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.ReactionWheel) */ {
 public:
  VizMessage_ReactionWheel();
  virtual ~VizMessage_ReactionWheel();

  VizMessage_ReactionWheel(const VizMessage_ReactionWheel& from);

  inline VizMessage_ReactionWheel& operator=(const VizMessage_ReactionWheel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_ReactionWheel(VizMessage_ReactionWheel&& from) noexcept
    : VizMessage_ReactionWheel() {
    *this = ::std::move(from);
  }

  inline VizMessage_ReactionWheel& operator=(VizMessage_ReactionWheel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_ReactionWheel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_ReactionWheel* internal_default_instance() {
    return reinterpret_cast<const VizMessage_ReactionWheel*>(
               &_VizMessage_ReactionWheel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(VizMessage_ReactionWheel* other);
  friend void swap(VizMessage_ReactionWheel& a, VizMessage_ReactionWheel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_ReactionWheel* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_ReactionWheel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_ReactionWheel& from);
  void MergeFrom(const VizMessage_ReactionWheel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_ReactionWheel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double position = 2;
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  double position(int index) const;
  void set_position(int index, double value);
  void add_position(double value);
  const ::google::protobuf::RepeatedField< double >&
      position() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_position();

  // repeated double spinAxisVector = 4;
  int spinaxisvector_size() const;
  void clear_spinaxisvector();
  static const int kSpinAxisVectorFieldNumber = 4;
  double spinaxisvector(int index) const;
  void set_spinaxisvector(int index, double value);
  void add_spinaxisvector(double value);
  const ::google::protobuf::RepeatedField< double >&
      spinaxisvector() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_spinaxisvector();

  // double wheelSpeed = 5;
  void clear_wheelspeed();
  static const int kWheelSpeedFieldNumber = 5;
  double wheelspeed() const;
  void set_wheelspeed(double value);

  // double wheelTorque = 6;
  void clear_wheeltorque();
  static const int kWheelTorqueFieldNumber = 6;
  double wheeltorque() const;
  void set_wheeltorque(double value);

  // double maxSpeed = 7;
  void clear_maxspeed();
  static const int kMaxSpeedFieldNumber = 7;
  double maxspeed() const;
  void set_maxspeed(double value);

  // double maxTorque = 8;
  void clear_maxtorque();
  static const int kMaxTorqueFieldNumber = 8;
  double maxtorque() const;
  void set_maxtorque(double value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.ReactionWheel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > spinaxisvector_;
  mutable int _spinaxisvector_cached_byte_size_;
  double wheelspeed_;
  double wheeltorque_;
  double maxspeed_;
  double maxtorque_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_ReactionWheelImpl();
};
// -------------------------------------------------------------------

class VizMessage_Thruster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.Thruster) */ {
 public:
  VizMessage_Thruster();
  virtual ~VizMessage_Thruster();

  VizMessage_Thruster(const VizMessage_Thruster& from);

  inline VizMessage_Thruster& operator=(const VizMessage_Thruster& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_Thruster(VizMessage_Thruster&& from) noexcept
    : VizMessage_Thruster() {
    *this = ::std::move(from);
  }

  inline VizMessage_Thruster& operator=(VizMessage_Thruster&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_Thruster& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_Thruster* internal_default_instance() {
    return reinterpret_cast<const VizMessage_Thruster*>(
               &_VizMessage_Thruster_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(VizMessage_Thruster* other);
  friend void swap(VizMessage_Thruster& a, VizMessage_Thruster& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_Thruster* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_Thruster* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_Thruster& from);
  void MergeFrom(const VizMessage_Thruster& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_Thruster* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double position = 2;
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  double position(int index) const;
  void set_position(int index, double value);
  void add_position(double value);
  const ::google::protobuf::RepeatedField< double >&
      position() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_position();

  // repeated double thrustVector = 4;
  int thrustvector_size() const;
  void clear_thrustvector();
  static const int kThrustVectorFieldNumber = 4;
  double thrustvector(int index) const;
  void set_thrustvector(int index, double value);
  void add_thrustvector(double value);
  const ::google::protobuf::RepeatedField< double >&
      thrustvector() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_thrustvector();

  // double currentThrust = 5;
  void clear_currentthrust();
  static const int kCurrentThrustFieldNumber = 5;
  double currentthrust() const;
  void set_currentthrust(double value);

  // double maxThrust = 6;
  void clear_maxthrust();
  static const int kMaxThrustFieldNumber = 6;
  double maxthrust() const;
  void set_maxthrust(double value);

  // int32 thrusterGroupID = 7;
  void clear_thrustergroupid();
  static const int kThrusterGroupIDFieldNumber = 7;
  ::google::protobuf::int32 thrustergroupid() const;
  void set_thrustergroupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.Thruster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > thrustvector_;
  mutable int _thrustvector_cached_byte_size_;
  double currentthrust_;
  double maxthrust_;
  ::google::protobuf::int32 thrustergroupid_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_ThrusterImpl();
};
// -------------------------------------------------------------------

class VizMessage_CoarseSunSensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.CoarseSunSensor) */ {
 public:
  VizMessage_CoarseSunSensor();
  virtual ~VizMessage_CoarseSunSensor();

  VizMessage_CoarseSunSensor(const VizMessage_CoarseSunSensor& from);

  inline VizMessage_CoarseSunSensor& operator=(const VizMessage_CoarseSunSensor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_CoarseSunSensor(VizMessage_CoarseSunSensor&& from) noexcept
    : VizMessage_CoarseSunSensor() {
    *this = ::std::move(from);
  }

  inline VizMessage_CoarseSunSensor& operator=(VizMessage_CoarseSunSensor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_CoarseSunSensor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_CoarseSunSensor* internal_default_instance() {
    return reinterpret_cast<const VizMessage_CoarseSunSensor*>(
               &_VizMessage_CoarseSunSensor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(VizMessage_CoarseSunSensor* other);
  friend void swap(VizMessage_CoarseSunSensor& a, VizMessage_CoarseSunSensor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_CoarseSunSensor* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_CoarseSunSensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_CoarseSunSensor& from);
  void MergeFrom(const VizMessage_CoarseSunSensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_CoarseSunSensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double position = 2;
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  double position(int index) const;
  void set_position(int index, double value);
  void add_position(double value);
  const ::google::protobuf::RepeatedField< double >&
      position() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_position();

  // repeated double normalVector = 4;
  int normalvector_size() const;
  void clear_normalvector();
  static const int kNormalVectorFieldNumber = 4;
  double normalvector(int index) const;
  void set_normalvector(int index, double value);
  void add_normalvector(double value);
  const ::google::protobuf::RepeatedField< double >&
      normalvector() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_normalvector();

  // double currentMsmt = 5;
  void clear_currentmsmt();
  static const int kCurrentMsmtFieldNumber = 5;
  double currentmsmt() const;
  void set_currentmsmt(double value);

  // int32 CSSGroupID = 7;
  void clear_cssgroupid();
  static const int kCSSGroupIDFieldNumber = 7;
  ::google::protobuf::int32 cssgroupid() const;
  void set_cssgroupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.CoarseSunSensor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > normalvector_;
  mutable int _normalvector_cached_byte_size_;
  double currentmsmt_;
  ::google::protobuf::int32 cssgroupid_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_CoarseSunSensorImpl();
};
// -------------------------------------------------------------------

class VizMessage_StarTracker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.StarTracker) */ {
 public:
  VizMessage_StarTracker();
  virtual ~VizMessage_StarTracker();

  VizMessage_StarTracker(const VizMessage_StarTracker& from);

  inline VizMessage_StarTracker& operator=(const VizMessage_StarTracker& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_StarTracker(VizMessage_StarTracker&& from) noexcept
    : VizMessage_StarTracker() {
    *this = ::std::move(from);
  }

  inline VizMessage_StarTracker& operator=(VizMessage_StarTracker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_StarTracker& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_StarTracker* internal_default_instance() {
    return reinterpret_cast<const VizMessage_StarTracker*>(
               &_VizMessage_StarTracker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(VizMessage_StarTracker* other);
  friend void swap(VizMessage_StarTracker& a, VizMessage_StarTracker& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_StarTracker* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_StarTracker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_StarTracker& from);
  void MergeFrom(const VizMessage_StarTracker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_StarTracker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double position = 2;
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  double position(int index) const;
  void set_position(int index, double value);
  void add_position(double value);
  const ::google::protobuf::RepeatedField< double >&
      position() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_position();

  // repeated double rotation = 4;
  int rotation_size() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  double rotation(int index) const;
  void set_rotation(int index, double value);
  void add_rotation(double value);
  const ::google::protobuf::RepeatedField< double >&
      rotation() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_rotation();

  // double fieldOfViewHeight = 5;
  void clear_fieldofviewheight();
  static const int kFieldOfViewHeightFieldNumber = 5;
  double fieldofviewheight() const;
  void set_fieldofviewheight(double value);

  // double fieldOfViewWidth = 6;
  void clear_fieldofviewwidth();
  static const int kFieldOfViewWidthFieldNumber = 6;
  double fieldofviewwidth() const;
  void set_fieldofviewwidth(double value);

  // int32 starTrackerGroupID = 7;
  void clear_startrackergroupid();
  static const int kStarTrackerGroupIDFieldNumber = 7;
  ::google::protobuf::int32 startrackergroupid() const;
  void set_startrackergroupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.StarTracker)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > rotation_;
  mutable int _rotation_cached_byte_size_;
  double fieldofviewheight_;
  double fieldofviewwidth_;
  ::google::protobuf::int32 startrackergroupid_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_StarTrackerImpl();
};
// -------------------------------------------------------------------

class VizMessage_CameraConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.CameraConfig) */ {
 public:
  VizMessage_CameraConfig();
  virtual ~VizMessage_CameraConfig();

  VizMessage_CameraConfig(const VizMessage_CameraConfig& from);

  inline VizMessage_CameraConfig& operator=(const VizMessage_CameraConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_CameraConfig(VizMessage_CameraConfig&& from) noexcept
    : VizMessage_CameraConfig() {
    *this = ::std::move(from);
  }

  inline VizMessage_CameraConfig& operator=(VizMessage_CameraConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_CameraConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_CameraConfig* internal_default_instance() {
    return reinterpret_cast<const VizMessage_CameraConfig*>(
               &_VizMessage_CameraConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(VizMessage_CameraConfig* other);
  friend void swap(VizMessage_CameraConfig& a, VizMessage_CameraConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_CameraConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_CameraConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_CameraConfig& from);
  void MergeFrom(const VizMessage_CameraConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_CameraConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 resolution = 4;
  int resolution_size() const;
  void clear_resolution();
  static const int kResolutionFieldNumber = 4;
  ::google::protobuf::int64 resolution(int index) const;
  void set_resolution(int index, ::google::protobuf::int64 value);
  void add_resolution(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      resolution() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_resolution();

  // repeated double cameraPos_B = 7;
  int camerapos_b_size() const;
  void clear_camerapos_b();
  static const int kCameraPosBFieldNumber = 7;
  double camerapos_b(int index) const;
  void set_camerapos_b(int index, double value);
  void add_camerapos_b(double value);
  const ::google::protobuf::RepeatedField< double >&
      camerapos_b() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_camerapos_b();

  // repeated double cameraDir_B = 8;
  int cameradir_b_size() const;
  void clear_cameradir_b();
  static const int kCameraDirBFieldNumber = 8;
  double cameradir_b(int index) const;
  void set_cameradir_b(int index, double value);
  void add_cameradir_b(double value);
  const ::google::protobuf::RepeatedField< double >&
      cameradir_b() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_cameradir_b();

  // string parentName = 2;
  void clear_parentname();
  static const int kParentNameFieldNumber = 2;
  const ::std::string& parentname() const;
  void set_parentname(const ::std::string& value);
  #if LANG_CXX11
  void set_parentname(::std::string&& value);
  #endif
  void set_parentname(const char* value);
  void set_parentname(const char* value, size_t size);
  ::std::string* mutable_parentname();
  ::std::string* release_parentname();
  void set_allocated_parentname(::std::string* parentname);

  // string skybox = 10;
  void clear_skybox();
  static const int kSkyboxFieldNumber = 10;
  const ::std::string& skybox() const;
  void set_skybox(const ::std::string& value);
  #if LANG_CXX11
  void set_skybox(::std::string&& value);
  #endif
  void set_skybox(const char* value);
  void set_skybox(const char* value, size_t size);
  ::std::string* mutable_skybox();
  ::std::string* release_skybox();
  void set_allocated_skybox(::std::string* skybox);

  // int64 cameraID = 1;
  void clear_cameraid();
  static const int kCameraIDFieldNumber = 1;
  ::google::protobuf::int64 cameraid() const;
  void set_cameraid(::google::protobuf::int64 value);

  // double fieldOfView = 3;
  void clear_fieldofview();
  static const int kFieldOfViewFieldNumber = 3;
  double fieldofview() const;
  void set_fieldofview(double value);

  // uint64 renderRate = 9;
  void clear_renderrate();
  static const int kRenderRateFieldNumber = 9;
  ::google::protobuf::uint64 renderrate() const;
  void set_renderrate(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.CameraConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > resolution_;
  mutable int _resolution_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > camerapos_b_;
  mutable int _camerapos_b_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > cameradir_b_;
  mutable int _cameradir_b_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr parentname_;
  ::google::protobuf::internal::ArenaStringPtr skybox_;
  ::google::protobuf::int64 cameraid_;
  double fieldofview_;
  ::google::protobuf::uint64 renderrate_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_CameraConfigImpl();
};
// -------------------------------------------------------------------

class VizMessage_PointLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.PointLine) */ {
 public:
  VizMessage_PointLine();
  virtual ~VizMessage_PointLine();

  VizMessage_PointLine(const VizMessage_PointLine& from);

  inline VizMessage_PointLine& operator=(const VizMessage_PointLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_PointLine(VizMessage_PointLine&& from) noexcept
    : VizMessage_PointLine() {
    *this = ::std::move(from);
  }

  inline VizMessage_PointLine& operator=(VizMessage_PointLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_PointLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_PointLine* internal_default_instance() {
    return reinterpret_cast<const VizMessage_PointLine*>(
               &_VizMessage_PointLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(VizMessage_PointLine* other);
  friend void swap(VizMessage_PointLine& a, VizMessage_PointLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_PointLine* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_PointLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_PointLine& from);
  void MergeFrom(const VizMessage_PointLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_PointLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 lineColor = 3;
  int linecolor_size() const;
  void clear_linecolor();
  static const int kLineColorFieldNumber = 3;
  ::google::protobuf::int32 linecolor(int index) const;
  void set_linecolor(int index, ::google::protobuf::int32 value);
  void add_linecolor(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      linecolor() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_linecolor();

  // string fromBodyName = 1;
  void clear_frombodyname();
  static const int kFromBodyNameFieldNumber = 1;
  const ::std::string& frombodyname() const;
  void set_frombodyname(const ::std::string& value);
  #if LANG_CXX11
  void set_frombodyname(::std::string&& value);
  #endif
  void set_frombodyname(const char* value);
  void set_frombodyname(const char* value, size_t size);
  ::std::string* mutable_frombodyname();
  ::std::string* release_frombodyname();
  void set_allocated_frombodyname(::std::string* frombodyname);

  // string toBodyName = 2;
  void clear_tobodyname();
  static const int kToBodyNameFieldNumber = 2;
  const ::std::string& tobodyname() const;
  void set_tobodyname(const ::std::string& value);
  #if LANG_CXX11
  void set_tobodyname(::std::string&& value);
  #endif
  void set_tobodyname(const char* value);
  void set_tobodyname(const char* value, size_t size);
  ::std::string* mutable_tobodyname();
  ::std::string* release_tobodyname();
  void set_allocated_tobodyname(::std::string* tobodyname);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.PointLine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > linecolor_;
  mutable int _linecolor_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr frombodyname_;
  ::google::protobuf::internal::ArenaStringPtr tobodyname_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_PointLineImpl();
};
// -------------------------------------------------------------------

class VizMessage_KeepOutInCone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.KeepOutInCone) */ {
 public:
  VizMessage_KeepOutInCone();
  virtual ~VizMessage_KeepOutInCone();

  VizMessage_KeepOutInCone(const VizMessage_KeepOutInCone& from);

  inline VizMessage_KeepOutInCone& operator=(const VizMessage_KeepOutInCone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_KeepOutInCone(VizMessage_KeepOutInCone&& from) noexcept
    : VizMessage_KeepOutInCone() {
    *this = ::std::move(from);
  }

  inline VizMessage_KeepOutInCone& operator=(VizMessage_KeepOutInCone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_KeepOutInCone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_KeepOutInCone* internal_default_instance() {
    return reinterpret_cast<const VizMessage_KeepOutInCone*>(
               &_VizMessage_KeepOutInCone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(VizMessage_KeepOutInCone* other);
  friend void swap(VizMessage_KeepOutInCone& a, VizMessage_KeepOutInCone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_KeepOutInCone* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_KeepOutInCone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_KeepOutInCone& from);
  void MergeFrom(const VizMessage_KeepOutInCone& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_KeepOutInCone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double position = 2;
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  double position(int index) const;
  void set_position(int index, double value);
  void add_position(double value);
  const ::google::protobuf::RepeatedField< double >&
      position() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_position();

  // repeated double normalVector = 3;
  int normalvector_size() const;
  void clear_normalvector();
  static const int kNormalVectorFieldNumber = 3;
  double normalvector(int index) const;
  void set_normalvector(int index, double value);
  void add_normalvector(double value);
  const ::google::protobuf::RepeatedField< double >&
      normalvector() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_normalvector();

  // repeated int64 coneColor = 8;
  int conecolor_size() const;
  void clear_conecolor();
  static const int kConeColorFieldNumber = 8;
  ::google::protobuf::int64 conecolor(int index) const;
  void set_conecolor(int index, ::google::protobuf::int64 value);
  void add_conecolor(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      conecolor() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_conecolor();

  // string fromBodyName = 6;
  void clear_frombodyname();
  static const int kFromBodyNameFieldNumber = 6;
  const ::std::string& frombodyname() const;
  void set_frombodyname(const ::std::string& value);
  #if LANG_CXX11
  void set_frombodyname(::std::string&& value);
  #endif
  void set_frombodyname(const char* value);
  void set_frombodyname(const char* value, size_t size);
  ::std::string* mutable_frombodyname();
  ::std::string* release_frombodyname();
  void set_allocated_frombodyname(::std::string* frombodyname);

  // string toBodyName = 7;
  void clear_tobodyname();
  static const int kToBodyNameFieldNumber = 7;
  const ::std::string& tobodyname() const;
  void set_tobodyname(const ::std::string& value);
  #if LANG_CXX11
  void set_tobodyname(::std::string&& value);
  #endif
  void set_tobodyname(const char* value);
  void set_tobodyname(const char* value, size_t size);
  ::std::string* mutable_tobodyname();
  ::std::string* release_tobodyname();
  void set_allocated_tobodyname(::std::string* tobodyname);

  // string coneName = 9;
  void clear_conename();
  static const int kConeNameFieldNumber = 9;
  const ::std::string& conename() const;
  void set_conename(const ::std::string& value);
  #if LANG_CXX11
  void set_conename(::std::string&& value);
  #endif
  void set_conename(const char* value);
  void set_conename(const char* value, size_t size);
  ::std::string* mutable_conename();
  ::std::string* release_conename();
  void set_allocated_conename(::std::string* conename);

  // double incidenceAngle = 4;
  void clear_incidenceangle();
  static const int kIncidenceAngleFieldNumber = 4;
  double incidenceangle() const;
  void set_incidenceangle(double value);

  // double coneHeight = 5;
  void clear_coneheight();
  static const int kConeHeightFieldNumber = 5;
  double coneheight() const;
  void set_coneheight(double value);

  // bool isKeepIn = 1;
  void clear_iskeepin();
  static const int kIsKeepInFieldNumber = 1;
  bool iskeepin() const;
  void set_iskeepin(bool value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.KeepOutInCone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > normalvector_;
  mutable int _normalvector_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > conecolor_;
  mutable int _conecolor_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr frombodyname_;
  ::google::protobuf::internal::ArenaStringPtr tobodyname_;
  ::google::protobuf::internal::ArenaStringPtr conename_;
  double incidenceangle_;
  double coneheight_;
  bool iskeepin_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_KeepOutInConeImpl();
};
// -------------------------------------------------------------------

class VizMessage_StandardCameraSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.StandardCameraSettings) */ {
 public:
  VizMessage_StandardCameraSettings();
  virtual ~VizMessage_StandardCameraSettings();

  VizMessage_StandardCameraSettings(const VizMessage_StandardCameraSettings& from);

  inline VizMessage_StandardCameraSettings& operator=(const VizMessage_StandardCameraSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_StandardCameraSettings(VizMessage_StandardCameraSettings&& from) noexcept
    : VizMessage_StandardCameraSettings() {
    *this = ::std::move(from);
  }

  inline VizMessage_StandardCameraSettings& operator=(VizMessage_StandardCameraSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_StandardCameraSettings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_StandardCameraSettings* internal_default_instance() {
    return reinterpret_cast<const VizMessage_StandardCameraSettings*>(
               &_VizMessage_StandardCameraSettings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(VizMessage_StandardCameraSettings* other);
  friend void swap(VizMessage_StandardCameraSettings& a, VizMessage_StandardCameraSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_StandardCameraSettings* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_StandardCameraSettings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_StandardCameraSettings& from);
  void MergeFrom(const VizMessage_StandardCameraSettings& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_StandardCameraSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double pointingVector = 8;
  int pointingvector_size() const;
  void clear_pointingvector();
  static const int kPointingVectorFieldNumber = 8;
  double pointingvector(int index) const;
  void set_pointingvector(int index, double value);
  void add_pointingvector(double value);
  const ::google::protobuf::RepeatedField< double >&
      pointingvector() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_pointingvector();

  // repeated double position = 9;
  int position_size() const;
  void clear_position();
  static const int kPositionFieldNumber = 9;
  double position(int index) const;
  void set_position(int index, double value);
  void add_position(double value);
  const ::google::protobuf::RepeatedField< double >&
      position() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_position();

  // string spacecraftName = 1;
  void clear_spacecraftname();
  static const int kSpacecraftNameFieldNumber = 1;
  const ::std::string& spacecraftname() const;
  void set_spacecraftname(const ::std::string& value);
  #if LANG_CXX11
  void set_spacecraftname(::std::string&& value);
  #endif
  void set_spacecraftname(const char* value);
  void set_spacecraftname(const char* value, size_t size);
  ::std::string* mutable_spacecraftname();
  ::std::string* release_spacecraftname();
  void set_allocated_spacecraftname(::std::string* spacecraftname);

  // string bodyTarget = 6;
  void clear_bodytarget();
  static const int kBodyTargetFieldNumber = 6;
  const ::std::string& bodytarget() const;
  void set_bodytarget(const ::std::string& value);
  #if LANG_CXX11
  void set_bodytarget(::std::string&& value);
  #endif
  void set_bodytarget(const char* value);
  void set_bodytarget(const char* value, size_t size);
  ::std::string* mutable_bodytarget();
  ::std::string* release_bodytarget();
  void set_allocated_bodytarget(::std::string* bodytarget);

  // double fieldOfView = 5;
  void clear_fieldofview();
  static const int kFieldOfViewFieldNumber = 5;
  double fieldofview() const;
  void set_fieldofview(double value);

  // int32 setMode = 3;
  void clear_setmode();
  static const int kSetModeFieldNumber = 3;
  ::google::protobuf::int32 setmode() const;
  void set_setmode(::google::protobuf::int32 value);

  // int32 setView = 7;
  void clear_setview();
  static const int kSetViewFieldNumber = 7;
  ::google::protobuf::int32 setview() const;
  void set_setview(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.StandardCameraSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > pointingvector_;
  mutable int _pointingvector_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > position_;
  mutable int _position_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr spacecraftname_;
  ::google::protobuf::internal::ArenaStringPtr bodytarget_;
  double fieldofview_;
  ::google::protobuf::int32 setmode_;
  ::google::protobuf::int32 setview_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_StandardCameraSettingsImpl();
};
// -------------------------------------------------------------------

class VizMessage_ActuatorSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.ActuatorSettings) */ {
 public:
  VizMessage_ActuatorSettings();
  virtual ~VizMessage_ActuatorSettings();

  VizMessage_ActuatorSettings(const VizMessage_ActuatorSettings& from);

  inline VizMessage_ActuatorSettings& operator=(const VizMessage_ActuatorSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_ActuatorSettings(VizMessage_ActuatorSettings&& from) noexcept
    : VizMessage_ActuatorSettings() {
    *this = ::std::move(from);
  }

  inline VizMessage_ActuatorSettings& operator=(VizMessage_ActuatorSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_ActuatorSettings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_ActuatorSettings* internal_default_instance() {
    return reinterpret_cast<const VizMessage_ActuatorSettings*>(
               &_VizMessage_ActuatorSettings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(VizMessage_ActuatorSettings* other);
  friend void swap(VizMessage_ActuatorSettings& a, VizMessage_ActuatorSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_ActuatorSettings* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_ActuatorSettings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_ActuatorSettings& from);
  void MergeFrom(const VizMessage_ActuatorSettings& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_ActuatorSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string spacecraftName = 1;
  void clear_spacecraftname();
  static const int kSpacecraftNameFieldNumber = 1;
  const ::std::string& spacecraftname() const;
  void set_spacecraftname(const ::std::string& value);
  #if LANG_CXX11
  void set_spacecraftname(::std::string&& value);
  #endif
  void set_spacecraftname(const char* value);
  void set_spacecraftname(const char* value, size_t size);
  ::std::string* mutable_spacecraftname();
  ::std::string* release_spacecraftname();
  void set_allocated_spacecraftname(::std::string* spacecraftname);

  // int32 viewThrusterPanel = 2;
  void clear_viewthrusterpanel();
  static const int kViewThrusterPanelFieldNumber = 2;
  ::google::protobuf::int32 viewthrusterpanel() const;
  void set_viewthrusterpanel(::google::protobuf::int32 value);

  // int32 viewThrusterHUD = 3;
  void clear_viewthrusterhud();
  static const int kViewThrusterHUDFieldNumber = 3;
  ::google::protobuf::int32 viewthrusterhud() const;
  void set_viewthrusterhud(::google::protobuf::int32 value);

  // int32 viewRWPanel = 4;
  void clear_viewrwpanel();
  static const int kViewRWPanelFieldNumber = 4;
  ::google::protobuf::int32 viewrwpanel() const;
  void set_viewrwpanel(::google::protobuf::int32 value);

  // int32 viewRWHUD = 5;
  void clear_viewrwhud();
  static const int kViewRWHUDFieldNumber = 5;
  ::google::protobuf::int32 viewrwhud() const;
  void set_viewrwhud(::google::protobuf::int32 value);

  // int32 showThrusterLabels = 6;
  void clear_showthrusterlabels();
  static const int kShowThrusterLabelsFieldNumber = 6;
  ::google::protobuf::int32 showthrusterlabels() const;
  void set_showthrusterlabels(::google::protobuf::int32 value);

  // int32 showRWLabels = 7;
  void clear_showrwlabels();
  static const int kShowRWLabelsFieldNumber = 7;
  ::google::protobuf::int32 showrwlabels() const;
  void set_showrwlabels(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.ActuatorSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr spacecraftname_;
  ::google::protobuf::int32 viewthrusterpanel_;
  ::google::protobuf::int32 viewthrusterhud_;
  ::google::protobuf::int32 viewrwpanel_;
  ::google::protobuf::int32 viewrwhud_;
  ::google::protobuf::int32 showthrusterlabels_;
  ::google::protobuf::int32 showrwlabels_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_ActuatorSettingsImpl();
};
// -------------------------------------------------------------------

class VizMessage_CustomModel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.CustomModel) */ {
 public:
  VizMessage_CustomModel();
  virtual ~VizMessage_CustomModel();

  VizMessage_CustomModel(const VizMessage_CustomModel& from);

  inline VizMessage_CustomModel& operator=(const VizMessage_CustomModel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_CustomModel(VizMessage_CustomModel&& from) noexcept
    : VizMessage_CustomModel() {
    *this = ::std::move(from);
  }

  inline VizMessage_CustomModel& operator=(VizMessage_CustomModel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_CustomModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_CustomModel* internal_default_instance() {
    return reinterpret_cast<const VizMessage_CustomModel*>(
               &_VizMessage_CustomModel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(VizMessage_CustomModel* other);
  friend void swap(VizMessage_CustomModel& a, VizMessage_CustomModel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_CustomModel* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_CustomModel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_CustomModel& from);
  void MergeFrom(const VizMessage_CustomModel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_CustomModel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string simBodiesToModify = 2;
  int simbodiestomodify_size() const;
  void clear_simbodiestomodify();
  static const int kSimBodiesToModifyFieldNumber = 2;
  const ::std::string& simbodiestomodify(int index) const;
  ::std::string* mutable_simbodiestomodify(int index);
  void set_simbodiestomodify(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_simbodiestomodify(int index, ::std::string&& value);
  #endif
  void set_simbodiestomodify(int index, const char* value);
  void set_simbodiestomodify(int index, const char* value, size_t size);
  ::std::string* add_simbodiestomodify();
  void add_simbodiestomodify(const ::std::string& value);
  #if LANG_CXX11
  void add_simbodiestomodify(::std::string&& value);
  #endif
  void add_simbodiestomodify(const char* value);
  void add_simbodiestomodify(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& simbodiestomodify() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_simbodiestomodify();

  // repeated double offset = 3;
  int offset_size() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  double offset(int index) const;
  void set_offset(int index, double value);
  void add_offset(double value);
  const ::google::protobuf::RepeatedField< double >&
      offset() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_offset();

  // repeated double rotation = 4;
  int rotation_size() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  double rotation(int index) const;
  void set_rotation(int index, double value);
  void add_rotation(double value);
  const ::google::protobuf::RepeatedField< double >&
      rotation() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_rotation();

  // repeated double scale = 5;
  int scale_size() const;
  void clear_scale();
  static const int kScaleFieldNumber = 5;
  double scale(int index) const;
  void set_scale(int index, double value);
  void add_scale(double value);
  const ::google::protobuf::RepeatedField< double >&
      scale() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_scale();

  // string modelPath = 1;
  void clear_modelpath();
  static const int kModelPathFieldNumber = 1;
  const ::std::string& modelpath() const;
  void set_modelpath(const ::std::string& value);
  #if LANG_CXX11
  void set_modelpath(::std::string&& value);
  #endif
  void set_modelpath(const char* value);
  void set_modelpath(const char* value, size_t size);
  ::std::string* mutable_modelpath();
  ::std::string* release_modelpath();
  void set_allocated_modelpath(::std::string* modelpath);

  // string customTexturePath = 6;
  void clear_customtexturepath();
  static const int kCustomTexturePathFieldNumber = 6;
  const ::std::string& customtexturepath() const;
  void set_customtexturepath(const ::std::string& value);
  #if LANG_CXX11
  void set_customtexturepath(::std::string&& value);
  #endif
  void set_customtexturepath(const char* value);
  void set_customtexturepath(const char* value, size_t size);
  ::std::string* mutable_customtexturepath();
  ::std::string* release_customtexturepath();
  void set_allocated_customtexturepath(::std::string* customtexturepath);

  // string normalMapPath = 7;
  void clear_normalmappath();
  static const int kNormalMapPathFieldNumber = 7;
  const ::std::string& normalmappath() const;
  void set_normalmappath(const ::std::string& value);
  #if LANG_CXX11
  void set_normalmappath(::std::string&& value);
  #endif
  void set_normalmappath(const char* value);
  void set_normalmappath(const char* value, size_t size);
  ::std::string* mutable_normalmappath();
  ::std::string* release_normalmappath();
  void set_allocated_normalmappath(::std::string* normalmappath);

  // int32 shader = 8;
  void clear_shader();
  static const int kShaderFieldNumber = 8;
  ::google::protobuf::int32 shader() const;
  void set_shader(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.CustomModel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> simbodiestomodify_;
  ::google::protobuf::RepeatedField< double > offset_;
  mutable int _offset_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > rotation_;
  mutable int _rotation_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > scale_;
  mutable int _scale_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr modelpath_;
  ::google::protobuf::internal::ArenaStringPtr customtexturepath_;
  ::google::protobuf::internal::ArenaStringPtr normalmappath_;
  ::google::protobuf::int32 shader_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_CustomModelImpl();
};
// -------------------------------------------------------------------

class VizMessage_VizSettingsPb : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage.VizSettingsPb) */ {
 public:
  VizMessage_VizSettingsPb();
  virtual ~VizMessage_VizSettingsPb();

  VizMessage_VizSettingsPb(const VizMessage_VizSettingsPb& from);

  inline VizMessage_VizSettingsPb& operator=(const VizMessage_VizSettingsPb& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage_VizSettingsPb(VizMessage_VizSettingsPb&& from) noexcept
    : VizMessage_VizSettingsPb() {
    *this = ::std::move(from);
  }

  inline VizMessage_VizSettingsPb& operator=(VizMessage_VizSettingsPb&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage_VizSettingsPb& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage_VizSettingsPb* internal_default_instance() {
    return reinterpret_cast<const VizMessage_VizSettingsPb*>(
               &_VizMessage_VizSettingsPb_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(VizMessage_VizSettingsPb* other);
  friend void swap(VizMessage_VizSettingsPb& a, VizMessage_VizSettingsPb& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage_VizSettingsPb* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage_VizSettingsPb* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage_VizSettingsPb& from);
  void MergeFrom(const VizMessage_VizSettingsPb& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage_VizSettingsPb* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .vizProtobufferMessage.VizMessage.PointLine pointLines = 5;
  int pointlines_size() const;
  void clear_pointlines();
  static const int kPointLinesFieldNumber = 5;
  const ::vizProtobufferMessage::VizMessage_PointLine& pointlines(int index) const;
  ::vizProtobufferMessage::VizMessage_PointLine* mutable_pointlines(int index);
  ::vizProtobufferMessage::VizMessage_PointLine* add_pointlines();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_PointLine >*
      mutable_pointlines();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_PointLine >&
      pointlines() const;

  // repeated .vizProtobufferMessage.VizMessage.KeepOutInCone keepOutInCones = 6;
  int keepoutincones_size() const;
  void clear_keepoutincones();
  static const int kKeepOutInConesFieldNumber = 6;
  const ::vizProtobufferMessage::VizMessage_KeepOutInCone& keepoutincones(int index) const;
  ::vizProtobufferMessage::VizMessage_KeepOutInCone* mutable_keepoutincones(int index);
  ::vizProtobufferMessage::VizMessage_KeepOutInCone* add_keepoutincones();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_KeepOutInCone >*
      mutable_keepoutincones();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_KeepOutInCone >&
      keepoutincones() const;

  // repeated .vizProtobufferMessage.VizMessage.StandardCameraSettings standardCameraSettings = 7;
  int standardcamerasettings_size() const;
  void clear_standardcamerasettings();
  static const int kStandardCameraSettingsFieldNumber = 7;
  const ::vizProtobufferMessage::VizMessage_StandardCameraSettings& standardcamerasettings(int index) const;
  ::vizProtobufferMessage::VizMessage_StandardCameraSettings* mutable_standardcamerasettings(int index);
  ::vizProtobufferMessage::VizMessage_StandardCameraSettings* add_standardcamerasettings();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StandardCameraSettings >*
      mutable_standardcamerasettings();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StandardCameraSettings >&
      standardcamerasettings() const;

  // repeated .vizProtobufferMessage.VizMessage.ActuatorSettings actuatorSettings = 10;
  int actuatorsettings_size() const;
  void clear_actuatorsettings();
  static const int kActuatorSettingsFieldNumber = 10;
  const ::vizProtobufferMessage::VizMessage_ActuatorSettings& actuatorsettings(int index) const;
  ::vizProtobufferMessage::VizMessage_ActuatorSettings* mutable_actuatorsettings(int index);
  ::vizProtobufferMessage::VizMessage_ActuatorSettings* add_actuatorsettings();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ActuatorSettings >*
      mutable_actuatorsettings();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ActuatorSettings >&
      actuatorsettings() const;

  // repeated .vizProtobufferMessage.VizMessage.CustomModel customModels = 12;
  int custommodels_size() const;
  void clear_custommodels();
  static const int kCustomModelsFieldNumber = 12;
  const ::vizProtobufferMessage::VizMessage_CustomModel& custommodels(int index) const;
  ::vizProtobufferMessage::VizMessage_CustomModel* mutable_custommodels(int index);
  ::vizProtobufferMessage::VizMessage_CustomModel* add_custommodels();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CustomModel >*
      mutable_custommodels();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CustomModel >&
      custommodels() const;

  // string skybox = 11;
  void clear_skybox();
  static const int kSkyboxFieldNumber = 11;
  const ::std::string& skybox() const;
  void set_skybox(const ::std::string& value);
  #if LANG_CXX11
  void set_skybox(::std::string&& value);
  #endif
  void set_skybox(const char* value);
  void set_skybox(const char* value, size_t size);
  ::std::string* mutable_skybox();
  ::std::string* release_skybox();
  void set_allocated_skybox(::std::string* skybox);

  // string defaultSpacecraftSprite = 20;
  void clear_defaultspacecraftsprite();
  static const int kDefaultSpacecraftSpriteFieldNumber = 20;
  const ::std::string& defaultspacecraftsprite() const;
  void set_defaultspacecraftsprite(const ::std::string& value);
  #if LANG_CXX11
  void set_defaultspacecraftsprite(::std::string&& value);
  #endif
  void set_defaultspacecraftsprite(const char* value);
  void set_defaultspacecraftsprite(const char* value, size_t size);
  ::std::string* mutable_defaultspacecraftsprite();
  ::std::string* release_defaultspacecraftsprite();
  void set_allocated_defaultspacecraftsprite(::std::string* defaultspacecraftsprite);

  // double ambient = 1;
  void clear_ambient();
  static const int kAmbientFieldNumber = 1;
  double ambient() const;
  void set_ambient(double value);

  // int32 orbitLinesOn = 2;
  void clear_orbitlineson();
  static const int kOrbitLinesOnFieldNumber = 2;
  ::google::protobuf::int32 orbitlineson() const;
  void set_orbitlineson(::google::protobuf::int32 value);

  // int32 spacecraftCSon = 3;
  void clear_spacecraftcson();
  static const int kSpacecraftCSonFieldNumber = 3;
  ::google::protobuf::int32 spacecraftcson() const;
  void set_spacecraftcson(::google::protobuf::int32 value);

  // int32 planetCSon = 4;
  void clear_planetcson();
  static const int kPlanetCSonFieldNumber = 4;
  ::google::protobuf::int32 planetcson() const;
  void set_planetcson(::google::protobuf::int32 value);

  // int32 viewCameraBoresightHUD = 13;
  void clear_viewcameraboresighthud();
  static const int kViewCameraBoresightHUDFieldNumber = 13;
  ::google::protobuf::int32 viewcameraboresighthud() const;
  void set_viewcameraboresighthud(::google::protobuf::int32 value);

  // int32 viewCameraConeHUD = 14;
  void clear_viewcameraconehud();
  static const int kViewCameraConeHUDFieldNumber = 14;
  ::google::protobuf::int32 viewcameraconehud() const;
  void set_viewcameraconehud(::google::protobuf::int32 value);

  // int32 showCSLabels = 15;
  void clear_showcslabels();
  static const int kShowCSLabelsFieldNumber = 15;
  ::google::protobuf::int32 showcslabels() const;
  void set_showcslabels(::google::protobuf::int32 value);

  // int32 showCelestialBodyLabels = 16;
  void clear_showcelestialbodylabels();
  static const int kShowCelestialBodyLabelsFieldNumber = 16;
  ::google::protobuf::int32 showcelestialbodylabels() const;
  void set_showcelestialbodylabels(::google::protobuf::int32 value);

  // int32 showSpacecraftLabels = 17;
  void clear_showspacecraftlabels();
  static const int kShowSpacecraftLabelsFieldNumber = 17;
  ::google::protobuf::int32 showspacecraftlabels() const;
  void set_showspacecraftlabels(::google::protobuf::int32 value);

  // double customGUIScale = 19;
  void clear_customguiscale();
  static const int kCustomGUIScaleFieldNumber = 19;
  double customguiscale() const;
  void set_customguiscale(double value);

  // int32 showCameraLabels = 18;
  void clear_showcameralabels();
  static const int kShowCameraLabelsFieldNumber = 18;
  ::google::protobuf::int32 showcameralabels() const;
  void set_showcameralabels(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage.VizSettingsPb)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_PointLine > pointlines_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_KeepOutInCone > keepoutincones_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StandardCameraSettings > standardcamerasettings_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ActuatorSettings > actuatorsettings_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CustomModel > custommodels_;
  ::google::protobuf::internal::ArenaStringPtr skybox_;
  ::google::protobuf::internal::ArenaStringPtr defaultspacecraftsprite_;
  double ambient_;
  ::google::protobuf::int32 orbitlineson_;
  ::google::protobuf::int32 spacecraftcson_;
  ::google::protobuf::int32 planetcson_;
  ::google::protobuf::int32 viewcameraboresighthud_;
  ::google::protobuf::int32 viewcameraconehud_;
  ::google::protobuf::int32 showcslabels_;
  ::google::protobuf::int32 showcelestialbodylabels_;
  ::google::protobuf::int32 showspacecraftlabels_;
  double customguiscale_;
  ::google::protobuf::int32 showcameralabels_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessage_VizSettingsPbImpl();
};
// -------------------------------------------------------------------

class VizMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vizProtobufferMessage.VizMessage) */ {
 public:
  VizMessage();
  virtual ~VizMessage();

  VizMessage(const VizMessage& from);

  inline VizMessage& operator=(const VizMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VizMessage(VizMessage&& from) noexcept
    : VizMessage() {
    *this = ::std::move(from);
  }

  inline VizMessage& operator=(VizMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VizMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VizMessage* internal_default_instance() {
    return reinterpret_cast<const VizMessage*>(
               &_VizMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(VizMessage* other);
  friend void swap(VizMessage& a, VizMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VizMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  VizMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VizMessage& from);
  void MergeFrom(const VizMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VizMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VizMessage_TimeStamp TimeStamp;
  typedef VizMessage_CelestialBody CelestialBody;
  typedef VizMessage_Spacecraft Spacecraft;
  typedef VizMessage_ReactionWheel ReactionWheel;
  typedef VizMessage_Thruster Thruster;
  typedef VizMessage_CoarseSunSensor CoarseSunSensor;
  typedef VizMessage_StarTracker StarTracker;
  typedef VizMessage_CameraConfig CameraConfig;
  typedef VizMessage_PointLine PointLine;
  typedef VizMessage_KeepOutInCone KeepOutInCone;
  typedef VizMessage_StandardCameraSettings StandardCameraSettings;
  typedef VizMessage_ActuatorSettings ActuatorSettings;
  typedef VizMessage_CustomModel CustomModel;
  typedef VizMessage_VizSettingsPb VizSettingsPb;

  // accessors -------------------------------------------------------

  // repeated .vizProtobufferMessage.VizMessage.CelestialBody celestialBodies = 2;
  int celestialbodies_size() const;
  void clear_celestialbodies();
  static const int kCelestialBodiesFieldNumber = 2;
  const ::vizProtobufferMessage::VizMessage_CelestialBody& celestialbodies(int index) const;
  ::vizProtobufferMessage::VizMessage_CelestialBody* mutable_celestialbodies(int index);
  ::vizProtobufferMessage::VizMessage_CelestialBody* add_celestialbodies();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CelestialBody >*
      mutable_celestialbodies();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CelestialBody >&
      celestialbodies() const;

  // repeated .vizProtobufferMessage.VizMessage.Spacecraft spacecraft = 3;
  int spacecraft_size() const;
  void clear_spacecraft();
  static const int kSpacecraftFieldNumber = 3;
  const ::vizProtobufferMessage::VizMessage_Spacecraft& spacecraft(int index) const;
  ::vizProtobufferMessage::VizMessage_Spacecraft* mutable_spacecraft(int index);
  ::vizProtobufferMessage::VizMessage_Spacecraft* add_spacecraft();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Spacecraft >*
      mutable_spacecraft();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Spacecraft >&
      spacecraft() const;

  // repeated .vizProtobufferMessage.VizMessage.CameraConfig cameras = 4;
  int cameras_size() const;
  void clear_cameras();
  static const int kCamerasFieldNumber = 4;
  const ::vizProtobufferMessage::VizMessage_CameraConfig& cameras(int index) const;
  ::vizProtobufferMessage::VizMessage_CameraConfig* mutable_cameras(int index);
  ::vizProtobufferMessage::VizMessage_CameraConfig* add_cameras();
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CameraConfig >*
      mutable_cameras();
  const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CameraConfig >&
      cameras() const;

  // .vizProtobufferMessage.VizMessage.TimeStamp currentTime = 1;
  bool has_currenttime() const;
  void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 1;
  const ::vizProtobufferMessage::VizMessage_TimeStamp& currenttime() const;
  ::vizProtobufferMessage::VizMessage_TimeStamp* release_currenttime();
  ::vizProtobufferMessage::VizMessage_TimeStamp* mutable_currenttime();
  void set_allocated_currenttime(::vizProtobufferMessage::VizMessage_TimeStamp* currenttime);

  // .vizProtobufferMessage.VizMessage.VizSettingsPb settings = 7;
  bool has_settings() const;
  void clear_settings();
  static const int kSettingsFieldNumber = 7;
  const ::vizProtobufferMessage::VizMessage_VizSettingsPb& settings() const;
  ::vizProtobufferMessage::VizMessage_VizSettingsPb* release_settings();
  ::vizProtobufferMessage::VizMessage_VizSettingsPb* mutable_settings();
  void set_allocated_settings(::vizProtobufferMessage::VizMessage_VizSettingsPb* settings);

  // @@protoc_insertion_point(class_scope:vizProtobufferMessage.VizMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CelestialBody > celestialbodies_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Spacecraft > spacecraft_;
  ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CameraConfig > cameras_;
  ::vizProtobufferMessage::VizMessage_TimeStamp* currenttime_;
  ::vizProtobufferMessage::VizMessage_VizSettingsPb* settings_;
  mutable int _cached_size_;
  friend struct ::protobuf_vizMessage_2eproto::TableStruct;
  friend void ::protobuf_vizMessage_2eproto::InitDefaultsVizMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VizMessage_TimeStamp

// int64 frameNumber = 1;
inline void VizMessage_TimeStamp::clear_framenumber() {
  framenumber_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 VizMessage_TimeStamp::framenumber() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.TimeStamp.frameNumber)
  return framenumber_;
}
inline void VizMessage_TimeStamp::set_framenumber(::google::protobuf::int64 value) {
  
  framenumber_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.TimeStamp.frameNumber)
}

// double simTimeElapsed = 2;
inline void VizMessage_TimeStamp::clear_simtimeelapsed() {
  simtimeelapsed_ = 0;
}
inline double VizMessage_TimeStamp::simtimeelapsed() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.TimeStamp.simTimeElapsed)
  return simtimeelapsed_;
}
inline void VizMessage_TimeStamp::set_simtimeelapsed(double value) {
  
  simtimeelapsed_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.TimeStamp.simTimeElapsed)
}

// -------------------------------------------------------------------

// VizMessage_CelestialBody

// string bodyName = 1;
inline void VizMessage_CelestialBody::clear_bodyname() {
  bodyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_CelestialBody::bodyname() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CelestialBody.bodyName)
  return bodyname_.GetNoArena();
}
inline void VizMessage_CelestialBody::set_bodyname(const ::std::string& value) {
  
  bodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CelestialBody.bodyName)
}
#if LANG_CXX11
inline void VizMessage_CelestialBody::set_bodyname(::std::string&& value) {
  
  bodyname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.CelestialBody.bodyName)
}
#endif
inline void VizMessage_CelestialBody::set_bodyname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.CelestialBody.bodyName)
}
inline void VizMessage_CelestialBody::set_bodyname(const char* value, size_t size) {
  
  bodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.CelestialBody.bodyName)
}
inline ::std::string* VizMessage_CelestialBody::mutable_bodyname() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.CelestialBody.bodyName)
  return bodyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_CelestialBody::release_bodyname() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.CelestialBody.bodyName)
  
  return bodyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_CelestialBody::set_allocated_bodyname(::std::string* bodyname) {
  if (bodyname != NULL) {
    
  } else {
    
  }
  bodyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bodyname);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.CelestialBody.bodyName)
}

// repeated double position = 2;
inline int VizMessage_CelestialBody::position_size() const {
  return position_.size();
}
inline void VizMessage_CelestialBody::clear_position() {
  position_.Clear();
}
inline double VizMessage_CelestialBody::position(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CelestialBody.position)
  return position_.Get(index);
}
inline void VizMessage_CelestialBody::set_position(int index, double value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CelestialBody.position)
}
inline void VizMessage_CelestialBody::add_position(double value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CelestialBody.position)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CelestialBody::position() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CelestialBody.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CelestialBody::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CelestialBody.position)
  return &position_;
}

// repeated double velocity = 3;
inline int VizMessage_CelestialBody::velocity_size() const {
  return velocity_.size();
}
inline void VizMessage_CelestialBody::clear_velocity() {
  velocity_.Clear();
}
inline double VizMessage_CelestialBody::velocity(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CelestialBody.velocity)
  return velocity_.Get(index);
}
inline void VizMessage_CelestialBody::set_velocity(int index, double value) {
  velocity_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CelestialBody.velocity)
}
inline void VizMessage_CelestialBody::add_velocity(double value) {
  velocity_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CelestialBody.velocity)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CelestialBody::velocity() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CelestialBody.velocity)
  return velocity_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CelestialBody::mutable_velocity() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CelestialBody.velocity)
  return &velocity_;
}

// repeated double rotation = 4;
inline int VizMessage_CelestialBody::rotation_size() const {
  return rotation_.size();
}
inline void VizMessage_CelestialBody::clear_rotation() {
  rotation_.Clear();
}
inline double VizMessage_CelestialBody::rotation(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CelestialBody.rotation)
  return rotation_.Get(index);
}
inline void VizMessage_CelestialBody::set_rotation(int index, double value) {
  rotation_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CelestialBody.rotation)
}
inline void VizMessage_CelestialBody::add_rotation(double value) {
  rotation_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CelestialBody.rotation)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CelestialBody::rotation() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CelestialBody.rotation)
  return rotation_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CelestialBody::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CelestialBody.rotation)
  return &rotation_;
}

// -------------------------------------------------------------------

// VizMessage_Spacecraft

// string spacecraftName = 1;
inline void VizMessage_Spacecraft::clear_spacecraftname() {
  spacecraftname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_Spacecraft::spacecraftname() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftName)
  return spacecraftname_.GetNoArena();
}
inline void VizMessage_Spacecraft::set_spacecraftname(const ::std::string& value) {
  
  spacecraftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftName)
}
#if LANG_CXX11
inline void VizMessage_Spacecraft::set_spacecraftname(::std::string&& value) {
  
  spacecraftname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftName)
}
#endif
inline void VizMessage_Spacecraft::set_spacecraftname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spacecraftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftName)
}
inline void VizMessage_Spacecraft::set_spacecraftname(const char* value, size_t size) {
  
  spacecraftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftName)
}
inline ::std::string* VizMessage_Spacecraft::mutable_spacecraftname() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftName)
  return spacecraftname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_Spacecraft::release_spacecraftname() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftName)
  
  return spacecraftname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_Spacecraft::set_allocated_spacecraftname(::std::string* spacecraftname) {
  if (spacecraftname != NULL) {
    
  } else {
    
  }
  spacecraftname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spacecraftname);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftName)
}

// repeated double position = 2;
inline int VizMessage_Spacecraft::position_size() const {
  return position_.size();
}
inline void VizMessage_Spacecraft::clear_position() {
  position_.Clear();
}
inline double VizMessage_Spacecraft::position(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Spacecraft.position)
  return position_.Get(index);
}
inline void VizMessage_Spacecraft::set_position(int index, double value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Spacecraft.position)
}
inline void VizMessage_Spacecraft::add_position(double value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.Spacecraft.position)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_Spacecraft::position() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.Spacecraft.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_Spacecraft::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.Spacecraft.position)
  return &position_;
}

// repeated double velocity = 3;
inline int VizMessage_Spacecraft::velocity_size() const {
  return velocity_.size();
}
inline void VizMessage_Spacecraft::clear_velocity() {
  velocity_.Clear();
}
inline double VizMessage_Spacecraft::velocity(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Spacecraft.velocity)
  return velocity_.Get(index);
}
inline void VizMessage_Spacecraft::set_velocity(int index, double value) {
  velocity_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Spacecraft.velocity)
}
inline void VizMessage_Spacecraft::add_velocity(double value) {
  velocity_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.Spacecraft.velocity)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_Spacecraft::velocity() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.Spacecraft.velocity)
  return velocity_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_Spacecraft::mutable_velocity() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.Spacecraft.velocity)
  return &velocity_;
}

// repeated double rotation = 4;
inline int VizMessage_Spacecraft::rotation_size() const {
  return rotation_.size();
}
inline void VizMessage_Spacecraft::clear_rotation() {
  rotation_.Clear();
}
inline double VizMessage_Spacecraft::rotation(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Spacecraft.rotation)
  return rotation_.Get(index);
}
inline void VizMessage_Spacecraft::set_rotation(int index, double value) {
  rotation_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Spacecraft.rotation)
}
inline void VizMessage_Spacecraft::add_rotation(double value) {
  rotation_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.Spacecraft.rotation)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_Spacecraft::rotation() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.Spacecraft.rotation)
  return rotation_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_Spacecraft::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.Spacecraft.rotation)
  return &rotation_;
}

// repeated .vizProtobufferMessage.VizMessage.ReactionWheel reactionWheels = 5;
inline int VizMessage_Spacecraft::reactionwheels_size() const {
  return reactionwheels_.size();
}
inline void VizMessage_Spacecraft::clear_reactionwheels() {
  reactionwheels_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_ReactionWheel& VizMessage_Spacecraft::reactionwheels(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Spacecraft.reactionWheels)
  return reactionwheels_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_ReactionWheel* VizMessage_Spacecraft::mutable_reactionwheels(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.Spacecraft.reactionWheels)
  return reactionwheels_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_ReactionWheel* VizMessage_Spacecraft::add_reactionwheels() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.Spacecraft.reactionWheels)
  return reactionwheels_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ReactionWheel >*
VizMessage_Spacecraft::mutable_reactionwheels() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.Spacecraft.reactionWheels)
  return &reactionwheels_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ReactionWheel >&
VizMessage_Spacecraft::reactionwheels() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.Spacecraft.reactionWheels)
  return reactionwheels_;
}

// repeated .vizProtobufferMessage.VizMessage.Thruster thrusters = 6;
inline int VizMessage_Spacecraft::thrusters_size() const {
  return thrusters_.size();
}
inline void VizMessage_Spacecraft::clear_thrusters() {
  thrusters_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_Thruster& VizMessage_Spacecraft::thrusters(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Spacecraft.thrusters)
  return thrusters_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_Thruster* VizMessage_Spacecraft::mutable_thrusters(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.Spacecraft.thrusters)
  return thrusters_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_Thruster* VizMessage_Spacecraft::add_thrusters() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.Spacecraft.thrusters)
  return thrusters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Thruster >*
VizMessage_Spacecraft::mutable_thrusters() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.Spacecraft.thrusters)
  return &thrusters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Thruster >&
VizMessage_Spacecraft::thrusters() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.Spacecraft.thrusters)
  return thrusters_;
}

// repeated .vizProtobufferMessage.VizMessage.CoarseSunSensor CSS = 7;
inline int VizMessage_Spacecraft::css_size() const {
  return css_.size();
}
inline void VizMessage_Spacecraft::clear_css() {
  css_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_CoarseSunSensor& VizMessage_Spacecraft::css(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Spacecraft.CSS)
  return css_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_CoarseSunSensor* VizMessage_Spacecraft::mutable_css(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.Spacecraft.CSS)
  return css_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_CoarseSunSensor* VizMessage_Spacecraft::add_css() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.Spacecraft.CSS)
  return css_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CoarseSunSensor >*
VizMessage_Spacecraft::mutable_css() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.Spacecraft.CSS)
  return &css_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CoarseSunSensor >&
VizMessage_Spacecraft::css() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.Spacecraft.CSS)
  return css_;
}

// repeated .vizProtobufferMessage.VizMessage.StarTracker starTrackers = 8;
inline int VizMessage_Spacecraft::startrackers_size() const {
  return startrackers_.size();
}
inline void VizMessage_Spacecraft::clear_startrackers() {
  startrackers_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_StarTracker& VizMessage_Spacecraft::startrackers(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Spacecraft.starTrackers)
  return startrackers_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_StarTracker* VizMessage_Spacecraft::mutable_startrackers(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.Spacecraft.starTrackers)
  return startrackers_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_StarTracker* VizMessage_Spacecraft::add_startrackers() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.Spacecraft.starTrackers)
  return startrackers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StarTracker >*
VizMessage_Spacecraft::mutable_startrackers() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.Spacecraft.starTrackers)
  return &startrackers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StarTracker >&
VizMessage_Spacecraft::startrackers() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.Spacecraft.starTrackers)
  return startrackers_;
}

// string spacecraftSprite = 9;
inline void VizMessage_Spacecraft::clear_spacecraftsprite() {
  spacecraftsprite_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_Spacecraft::spacecraftsprite() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftSprite)
  return spacecraftsprite_.GetNoArena();
}
inline void VizMessage_Spacecraft::set_spacecraftsprite(const ::std::string& value) {
  
  spacecraftsprite_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftSprite)
}
#if LANG_CXX11
inline void VizMessage_Spacecraft::set_spacecraftsprite(::std::string&& value) {
  
  spacecraftsprite_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftSprite)
}
#endif
inline void VizMessage_Spacecraft::set_spacecraftsprite(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spacecraftsprite_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftSprite)
}
inline void VizMessage_Spacecraft::set_spacecraftsprite(const char* value, size_t size) {
  
  spacecraftsprite_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftSprite)
}
inline ::std::string* VizMessage_Spacecraft::mutable_spacecraftsprite() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftSprite)
  return spacecraftsprite_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_Spacecraft::release_spacecraftsprite() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftSprite)
  
  return spacecraftsprite_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_Spacecraft::set_allocated_spacecraftsprite(::std::string* spacecraftsprite) {
  if (spacecraftsprite != NULL) {
    
  } else {
    
  }
  spacecraftsprite_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spacecraftsprite);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.Spacecraft.spacecraftSprite)
}

// -------------------------------------------------------------------

// VizMessage_ReactionWheel

// repeated double position = 2;
inline int VizMessage_ReactionWheel::position_size() const {
  return position_.size();
}
inline void VizMessage_ReactionWheel::clear_position() {
  position_.Clear();
}
inline double VizMessage_ReactionWheel::position(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ReactionWheel.position)
  return position_.Get(index);
}
inline void VizMessage_ReactionWheel::set_position(int index, double value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ReactionWheel.position)
}
inline void VizMessage_ReactionWheel::add_position(double value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.ReactionWheel.position)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_ReactionWheel::position() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.ReactionWheel.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_ReactionWheel::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.ReactionWheel.position)
  return &position_;
}

// repeated double spinAxisVector = 4;
inline int VizMessage_ReactionWheel::spinaxisvector_size() const {
  return spinaxisvector_.size();
}
inline void VizMessage_ReactionWheel::clear_spinaxisvector() {
  spinaxisvector_.Clear();
}
inline double VizMessage_ReactionWheel::spinaxisvector(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ReactionWheel.spinAxisVector)
  return spinaxisvector_.Get(index);
}
inline void VizMessage_ReactionWheel::set_spinaxisvector(int index, double value) {
  spinaxisvector_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ReactionWheel.spinAxisVector)
}
inline void VizMessage_ReactionWheel::add_spinaxisvector(double value) {
  spinaxisvector_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.ReactionWheel.spinAxisVector)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_ReactionWheel::spinaxisvector() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.ReactionWheel.spinAxisVector)
  return spinaxisvector_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_ReactionWheel::mutable_spinaxisvector() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.ReactionWheel.spinAxisVector)
  return &spinaxisvector_;
}

// double wheelSpeed = 5;
inline void VizMessage_ReactionWheel::clear_wheelspeed() {
  wheelspeed_ = 0;
}
inline double VizMessage_ReactionWheel::wheelspeed() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ReactionWheel.wheelSpeed)
  return wheelspeed_;
}
inline void VizMessage_ReactionWheel::set_wheelspeed(double value) {
  
  wheelspeed_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ReactionWheel.wheelSpeed)
}

// double wheelTorque = 6;
inline void VizMessage_ReactionWheel::clear_wheeltorque() {
  wheeltorque_ = 0;
}
inline double VizMessage_ReactionWheel::wheeltorque() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ReactionWheel.wheelTorque)
  return wheeltorque_;
}
inline void VizMessage_ReactionWheel::set_wheeltorque(double value) {
  
  wheeltorque_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ReactionWheel.wheelTorque)
}

// double maxSpeed = 7;
inline void VizMessage_ReactionWheel::clear_maxspeed() {
  maxspeed_ = 0;
}
inline double VizMessage_ReactionWheel::maxspeed() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ReactionWheel.maxSpeed)
  return maxspeed_;
}
inline void VizMessage_ReactionWheel::set_maxspeed(double value) {
  
  maxspeed_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ReactionWheel.maxSpeed)
}

// double maxTorque = 8;
inline void VizMessage_ReactionWheel::clear_maxtorque() {
  maxtorque_ = 0;
}
inline double VizMessage_ReactionWheel::maxtorque() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ReactionWheel.maxTorque)
  return maxtorque_;
}
inline void VizMessage_ReactionWheel::set_maxtorque(double value) {
  
  maxtorque_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ReactionWheel.maxTorque)
}

// -------------------------------------------------------------------

// VizMessage_Thruster

// repeated double position = 2;
inline int VizMessage_Thruster::position_size() const {
  return position_.size();
}
inline void VizMessage_Thruster::clear_position() {
  position_.Clear();
}
inline double VizMessage_Thruster::position(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Thruster.position)
  return position_.Get(index);
}
inline void VizMessage_Thruster::set_position(int index, double value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Thruster.position)
}
inline void VizMessage_Thruster::add_position(double value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.Thruster.position)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_Thruster::position() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.Thruster.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_Thruster::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.Thruster.position)
  return &position_;
}

// repeated double thrustVector = 4;
inline int VizMessage_Thruster::thrustvector_size() const {
  return thrustvector_.size();
}
inline void VizMessage_Thruster::clear_thrustvector() {
  thrustvector_.Clear();
}
inline double VizMessage_Thruster::thrustvector(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Thruster.thrustVector)
  return thrustvector_.Get(index);
}
inline void VizMessage_Thruster::set_thrustvector(int index, double value) {
  thrustvector_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Thruster.thrustVector)
}
inline void VizMessage_Thruster::add_thrustvector(double value) {
  thrustvector_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.Thruster.thrustVector)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_Thruster::thrustvector() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.Thruster.thrustVector)
  return thrustvector_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_Thruster::mutable_thrustvector() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.Thruster.thrustVector)
  return &thrustvector_;
}

// double currentThrust = 5;
inline void VizMessage_Thruster::clear_currentthrust() {
  currentthrust_ = 0;
}
inline double VizMessage_Thruster::currentthrust() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Thruster.currentThrust)
  return currentthrust_;
}
inline void VizMessage_Thruster::set_currentthrust(double value) {
  
  currentthrust_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Thruster.currentThrust)
}

// double maxThrust = 6;
inline void VizMessage_Thruster::clear_maxthrust() {
  maxthrust_ = 0;
}
inline double VizMessage_Thruster::maxthrust() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Thruster.maxThrust)
  return maxthrust_;
}
inline void VizMessage_Thruster::set_maxthrust(double value) {
  
  maxthrust_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Thruster.maxThrust)
}

// int32 thrusterGroupID = 7;
inline void VizMessage_Thruster::clear_thrustergroupid() {
  thrustergroupid_ = 0;
}
inline ::google::protobuf::int32 VizMessage_Thruster::thrustergroupid() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.Thruster.thrusterGroupID)
  return thrustergroupid_;
}
inline void VizMessage_Thruster::set_thrustergroupid(::google::protobuf::int32 value) {
  
  thrustergroupid_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.Thruster.thrusterGroupID)
}

// -------------------------------------------------------------------

// VizMessage_CoarseSunSensor

// repeated double position = 2;
inline int VizMessage_CoarseSunSensor::position_size() const {
  return position_.size();
}
inline void VizMessage_CoarseSunSensor::clear_position() {
  position_.Clear();
}
inline double VizMessage_CoarseSunSensor::position(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CoarseSunSensor.position)
  return position_.Get(index);
}
inline void VizMessage_CoarseSunSensor::set_position(int index, double value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CoarseSunSensor.position)
}
inline void VizMessage_CoarseSunSensor::add_position(double value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CoarseSunSensor.position)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CoarseSunSensor::position() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CoarseSunSensor.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CoarseSunSensor::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CoarseSunSensor.position)
  return &position_;
}

// repeated double normalVector = 4;
inline int VizMessage_CoarseSunSensor::normalvector_size() const {
  return normalvector_.size();
}
inline void VizMessage_CoarseSunSensor::clear_normalvector() {
  normalvector_.Clear();
}
inline double VizMessage_CoarseSunSensor::normalvector(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CoarseSunSensor.normalVector)
  return normalvector_.Get(index);
}
inline void VizMessage_CoarseSunSensor::set_normalvector(int index, double value) {
  normalvector_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CoarseSunSensor.normalVector)
}
inline void VizMessage_CoarseSunSensor::add_normalvector(double value) {
  normalvector_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CoarseSunSensor.normalVector)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CoarseSunSensor::normalvector() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CoarseSunSensor.normalVector)
  return normalvector_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CoarseSunSensor::mutable_normalvector() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CoarseSunSensor.normalVector)
  return &normalvector_;
}

// double currentMsmt = 5;
inline void VizMessage_CoarseSunSensor::clear_currentmsmt() {
  currentmsmt_ = 0;
}
inline double VizMessage_CoarseSunSensor::currentmsmt() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CoarseSunSensor.currentMsmt)
  return currentmsmt_;
}
inline void VizMessage_CoarseSunSensor::set_currentmsmt(double value) {
  
  currentmsmt_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CoarseSunSensor.currentMsmt)
}

// int32 CSSGroupID = 7;
inline void VizMessage_CoarseSunSensor::clear_cssgroupid() {
  cssgroupid_ = 0;
}
inline ::google::protobuf::int32 VizMessage_CoarseSunSensor::cssgroupid() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CoarseSunSensor.CSSGroupID)
  return cssgroupid_;
}
inline void VizMessage_CoarseSunSensor::set_cssgroupid(::google::protobuf::int32 value) {
  
  cssgroupid_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CoarseSunSensor.CSSGroupID)
}

// -------------------------------------------------------------------

// VizMessage_StarTracker

// repeated double position = 2;
inline int VizMessage_StarTracker::position_size() const {
  return position_.size();
}
inline void VizMessage_StarTracker::clear_position() {
  position_.Clear();
}
inline double VizMessage_StarTracker::position(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StarTracker.position)
  return position_.Get(index);
}
inline void VizMessage_StarTracker::set_position(int index, double value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StarTracker.position)
}
inline void VizMessage_StarTracker::add_position(double value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.StarTracker.position)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_StarTracker::position() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.StarTracker.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_StarTracker::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.StarTracker.position)
  return &position_;
}

// repeated double rotation = 4;
inline int VizMessage_StarTracker::rotation_size() const {
  return rotation_.size();
}
inline void VizMessage_StarTracker::clear_rotation() {
  rotation_.Clear();
}
inline double VizMessage_StarTracker::rotation(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StarTracker.rotation)
  return rotation_.Get(index);
}
inline void VizMessage_StarTracker::set_rotation(int index, double value) {
  rotation_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StarTracker.rotation)
}
inline void VizMessage_StarTracker::add_rotation(double value) {
  rotation_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.StarTracker.rotation)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_StarTracker::rotation() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.StarTracker.rotation)
  return rotation_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_StarTracker::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.StarTracker.rotation)
  return &rotation_;
}

// double fieldOfViewHeight = 5;
inline void VizMessage_StarTracker::clear_fieldofviewheight() {
  fieldofviewheight_ = 0;
}
inline double VizMessage_StarTracker::fieldofviewheight() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StarTracker.fieldOfViewHeight)
  return fieldofviewheight_;
}
inline void VizMessage_StarTracker::set_fieldofviewheight(double value) {
  
  fieldofviewheight_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StarTracker.fieldOfViewHeight)
}

// double fieldOfViewWidth = 6;
inline void VizMessage_StarTracker::clear_fieldofviewwidth() {
  fieldofviewwidth_ = 0;
}
inline double VizMessage_StarTracker::fieldofviewwidth() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StarTracker.fieldOfViewWidth)
  return fieldofviewwidth_;
}
inline void VizMessage_StarTracker::set_fieldofviewwidth(double value) {
  
  fieldofviewwidth_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StarTracker.fieldOfViewWidth)
}

// int32 starTrackerGroupID = 7;
inline void VizMessage_StarTracker::clear_startrackergroupid() {
  startrackergroupid_ = 0;
}
inline ::google::protobuf::int32 VizMessage_StarTracker::startrackergroupid() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StarTracker.starTrackerGroupID)
  return startrackergroupid_;
}
inline void VizMessage_StarTracker::set_startrackergroupid(::google::protobuf::int32 value) {
  
  startrackergroupid_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StarTracker.starTrackerGroupID)
}

// -------------------------------------------------------------------

// VizMessage_CameraConfig

// int64 cameraID = 1;
inline void VizMessage_CameraConfig::clear_cameraid() {
  cameraid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 VizMessage_CameraConfig::cameraid() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CameraConfig.cameraID)
  return cameraid_;
}
inline void VizMessage_CameraConfig::set_cameraid(::google::protobuf::int64 value) {
  
  cameraid_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CameraConfig.cameraID)
}

// string parentName = 2;
inline void VizMessage_CameraConfig::clear_parentname() {
  parentname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_CameraConfig::parentname() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CameraConfig.parentName)
  return parentname_.GetNoArena();
}
inline void VizMessage_CameraConfig::set_parentname(const ::std::string& value) {
  
  parentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CameraConfig.parentName)
}
#if LANG_CXX11
inline void VizMessage_CameraConfig::set_parentname(::std::string&& value) {
  
  parentname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.CameraConfig.parentName)
}
#endif
inline void VizMessage_CameraConfig::set_parentname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.CameraConfig.parentName)
}
inline void VizMessage_CameraConfig::set_parentname(const char* value, size_t size) {
  
  parentname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.CameraConfig.parentName)
}
inline ::std::string* VizMessage_CameraConfig::mutable_parentname() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.CameraConfig.parentName)
  return parentname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_CameraConfig::release_parentname() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.CameraConfig.parentName)
  
  return parentname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_CameraConfig::set_allocated_parentname(::std::string* parentname) {
  if (parentname != NULL) {
    
  } else {
    
  }
  parentname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parentname);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.CameraConfig.parentName)
}

// double fieldOfView = 3;
inline void VizMessage_CameraConfig::clear_fieldofview() {
  fieldofview_ = 0;
}
inline double VizMessage_CameraConfig::fieldofview() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CameraConfig.fieldOfView)
  return fieldofview_;
}
inline void VizMessage_CameraConfig::set_fieldofview(double value) {
  
  fieldofview_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CameraConfig.fieldOfView)
}

// repeated int64 resolution = 4;
inline int VizMessage_CameraConfig::resolution_size() const {
  return resolution_.size();
}
inline void VizMessage_CameraConfig::clear_resolution() {
  resolution_.Clear();
}
inline ::google::protobuf::int64 VizMessage_CameraConfig::resolution(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CameraConfig.resolution)
  return resolution_.Get(index);
}
inline void VizMessage_CameraConfig::set_resolution(int index, ::google::protobuf::int64 value) {
  resolution_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CameraConfig.resolution)
}
inline void VizMessage_CameraConfig::add_resolution(::google::protobuf::int64 value) {
  resolution_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CameraConfig.resolution)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
VizMessage_CameraConfig::resolution() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CameraConfig.resolution)
  return resolution_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
VizMessage_CameraConfig::mutable_resolution() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CameraConfig.resolution)
  return &resolution_;
}

// repeated double cameraPos_B = 7;
inline int VizMessage_CameraConfig::camerapos_b_size() const {
  return camerapos_b_.size();
}
inline void VizMessage_CameraConfig::clear_camerapos_b() {
  camerapos_b_.Clear();
}
inline double VizMessage_CameraConfig::camerapos_b(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CameraConfig.cameraPos_B)
  return camerapos_b_.Get(index);
}
inline void VizMessage_CameraConfig::set_camerapos_b(int index, double value) {
  camerapos_b_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CameraConfig.cameraPos_B)
}
inline void VizMessage_CameraConfig::add_camerapos_b(double value) {
  camerapos_b_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CameraConfig.cameraPos_B)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CameraConfig::camerapos_b() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CameraConfig.cameraPos_B)
  return camerapos_b_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CameraConfig::mutable_camerapos_b() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CameraConfig.cameraPos_B)
  return &camerapos_b_;
}

// repeated double cameraDir_B = 8;
inline int VizMessage_CameraConfig::cameradir_b_size() const {
  return cameradir_b_.size();
}
inline void VizMessage_CameraConfig::clear_cameradir_b() {
  cameradir_b_.Clear();
}
inline double VizMessage_CameraConfig::cameradir_b(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CameraConfig.cameraDir_B)
  return cameradir_b_.Get(index);
}
inline void VizMessage_CameraConfig::set_cameradir_b(int index, double value) {
  cameradir_b_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CameraConfig.cameraDir_B)
}
inline void VizMessage_CameraConfig::add_cameradir_b(double value) {
  cameradir_b_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CameraConfig.cameraDir_B)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CameraConfig::cameradir_b() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CameraConfig.cameraDir_B)
  return cameradir_b_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CameraConfig::mutable_cameradir_b() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CameraConfig.cameraDir_B)
  return &cameradir_b_;
}

// uint64 renderRate = 9;
inline void VizMessage_CameraConfig::clear_renderrate() {
  renderrate_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VizMessage_CameraConfig::renderrate() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CameraConfig.renderRate)
  return renderrate_;
}
inline void VizMessage_CameraConfig::set_renderrate(::google::protobuf::uint64 value) {
  
  renderrate_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CameraConfig.renderRate)
}

// string skybox = 10;
inline void VizMessage_CameraConfig::clear_skybox() {
  skybox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_CameraConfig::skybox() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CameraConfig.skybox)
  return skybox_.GetNoArena();
}
inline void VizMessage_CameraConfig::set_skybox(const ::std::string& value) {
  
  skybox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CameraConfig.skybox)
}
#if LANG_CXX11
inline void VizMessage_CameraConfig::set_skybox(::std::string&& value) {
  
  skybox_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.CameraConfig.skybox)
}
#endif
inline void VizMessage_CameraConfig::set_skybox(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  skybox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.CameraConfig.skybox)
}
inline void VizMessage_CameraConfig::set_skybox(const char* value, size_t size) {
  
  skybox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.CameraConfig.skybox)
}
inline ::std::string* VizMessage_CameraConfig::mutable_skybox() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.CameraConfig.skybox)
  return skybox_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_CameraConfig::release_skybox() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.CameraConfig.skybox)
  
  return skybox_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_CameraConfig::set_allocated_skybox(::std::string* skybox) {
  if (skybox != NULL) {
    
  } else {
    
  }
  skybox_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skybox);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.CameraConfig.skybox)
}

// -------------------------------------------------------------------

// VizMessage_PointLine

// string fromBodyName = 1;
inline void VizMessage_PointLine::clear_frombodyname() {
  frombodyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_PointLine::frombodyname() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.PointLine.fromBodyName)
  return frombodyname_.GetNoArena();
}
inline void VizMessage_PointLine::set_frombodyname(const ::std::string& value) {
  
  frombodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.PointLine.fromBodyName)
}
#if LANG_CXX11
inline void VizMessage_PointLine::set_frombodyname(::std::string&& value) {
  
  frombodyname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.PointLine.fromBodyName)
}
#endif
inline void VizMessage_PointLine::set_frombodyname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  frombodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.PointLine.fromBodyName)
}
inline void VizMessage_PointLine::set_frombodyname(const char* value, size_t size) {
  
  frombodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.PointLine.fromBodyName)
}
inline ::std::string* VizMessage_PointLine::mutable_frombodyname() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.PointLine.fromBodyName)
  return frombodyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_PointLine::release_frombodyname() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.PointLine.fromBodyName)
  
  return frombodyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_PointLine::set_allocated_frombodyname(::std::string* frombodyname) {
  if (frombodyname != NULL) {
    
  } else {
    
  }
  frombodyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frombodyname);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.PointLine.fromBodyName)
}

// string toBodyName = 2;
inline void VizMessage_PointLine::clear_tobodyname() {
  tobodyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_PointLine::tobodyname() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.PointLine.toBodyName)
  return tobodyname_.GetNoArena();
}
inline void VizMessage_PointLine::set_tobodyname(const ::std::string& value) {
  
  tobodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.PointLine.toBodyName)
}
#if LANG_CXX11
inline void VizMessage_PointLine::set_tobodyname(::std::string&& value) {
  
  tobodyname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.PointLine.toBodyName)
}
#endif
inline void VizMessage_PointLine::set_tobodyname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tobodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.PointLine.toBodyName)
}
inline void VizMessage_PointLine::set_tobodyname(const char* value, size_t size) {
  
  tobodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.PointLine.toBodyName)
}
inline ::std::string* VizMessage_PointLine::mutable_tobodyname() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.PointLine.toBodyName)
  return tobodyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_PointLine::release_tobodyname() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.PointLine.toBodyName)
  
  return tobodyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_PointLine::set_allocated_tobodyname(::std::string* tobodyname) {
  if (tobodyname != NULL) {
    
  } else {
    
  }
  tobodyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tobodyname);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.PointLine.toBodyName)
}

// repeated int32 lineColor = 3;
inline int VizMessage_PointLine::linecolor_size() const {
  return linecolor_.size();
}
inline void VizMessage_PointLine::clear_linecolor() {
  linecolor_.Clear();
}
inline ::google::protobuf::int32 VizMessage_PointLine::linecolor(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.PointLine.lineColor)
  return linecolor_.Get(index);
}
inline void VizMessage_PointLine::set_linecolor(int index, ::google::protobuf::int32 value) {
  linecolor_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.PointLine.lineColor)
}
inline void VizMessage_PointLine::add_linecolor(::google::protobuf::int32 value) {
  linecolor_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.PointLine.lineColor)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
VizMessage_PointLine::linecolor() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.PointLine.lineColor)
  return linecolor_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
VizMessage_PointLine::mutable_linecolor() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.PointLine.lineColor)
  return &linecolor_;
}

// -------------------------------------------------------------------

// VizMessage_KeepOutInCone

// bool isKeepIn = 1;
inline void VizMessage_KeepOutInCone::clear_iskeepin() {
  iskeepin_ = false;
}
inline bool VizMessage_KeepOutInCone::iskeepin() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.KeepOutInCone.isKeepIn)
  return iskeepin_;
}
inline void VizMessage_KeepOutInCone::set_iskeepin(bool value) {
  
  iskeepin_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.KeepOutInCone.isKeepIn)
}

// repeated double position = 2;
inline int VizMessage_KeepOutInCone::position_size() const {
  return position_.size();
}
inline void VizMessage_KeepOutInCone::clear_position() {
  position_.Clear();
}
inline double VizMessage_KeepOutInCone::position(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.KeepOutInCone.position)
  return position_.Get(index);
}
inline void VizMessage_KeepOutInCone::set_position(int index, double value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.KeepOutInCone.position)
}
inline void VizMessage_KeepOutInCone::add_position(double value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.KeepOutInCone.position)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_KeepOutInCone::position() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.KeepOutInCone.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_KeepOutInCone::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.KeepOutInCone.position)
  return &position_;
}

// repeated double normalVector = 3;
inline int VizMessage_KeepOutInCone::normalvector_size() const {
  return normalvector_.size();
}
inline void VizMessage_KeepOutInCone::clear_normalvector() {
  normalvector_.Clear();
}
inline double VizMessage_KeepOutInCone::normalvector(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.KeepOutInCone.normalVector)
  return normalvector_.Get(index);
}
inline void VizMessage_KeepOutInCone::set_normalvector(int index, double value) {
  normalvector_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.KeepOutInCone.normalVector)
}
inline void VizMessage_KeepOutInCone::add_normalvector(double value) {
  normalvector_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.KeepOutInCone.normalVector)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_KeepOutInCone::normalvector() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.KeepOutInCone.normalVector)
  return normalvector_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_KeepOutInCone::mutable_normalvector() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.KeepOutInCone.normalVector)
  return &normalvector_;
}

// double incidenceAngle = 4;
inline void VizMessage_KeepOutInCone::clear_incidenceangle() {
  incidenceangle_ = 0;
}
inline double VizMessage_KeepOutInCone::incidenceangle() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.KeepOutInCone.incidenceAngle)
  return incidenceangle_;
}
inline void VizMessage_KeepOutInCone::set_incidenceangle(double value) {
  
  incidenceangle_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.KeepOutInCone.incidenceAngle)
}

// double coneHeight = 5;
inline void VizMessage_KeepOutInCone::clear_coneheight() {
  coneheight_ = 0;
}
inline double VizMessage_KeepOutInCone::coneheight() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.KeepOutInCone.coneHeight)
  return coneheight_;
}
inline void VizMessage_KeepOutInCone::set_coneheight(double value) {
  
  coneheight_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.KeepOutInCone.coneHeight)
}

// string fromBodyName = 6;
inline void VizMessage_KeepOutInCone::clear_frombodyname() {
  frombodyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_KeepOutInCone::frombodyname() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.KeepOutInCone.fromBodyName)
  return frombodyname_.GetNoArena();
}
inline void VizMessage_KeepOutInCone::set_frombodyname(const ::std::string& value) {
  
  frombodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.KeepOutInCone.fromBodyName)
}
#if LANG_CXX11
inline void VizMessage_KeepOutInCone::set_frombodyname(::std::string&& value) {
  
  frombodyname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.KeepOutInCone.fromBodyName)
}
#endif
inline void VizMessage_KeepOutInCone::set_frombodyname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  frombodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.KeepOutInCone.fromBodyName)
}
inline void VizMessage_KeepOutInCone::set_frombodyname(const char* value, size_t size) {
  
  frombodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.KeepOutInCone.fromBodyName)
}
inline ::std::string* VizMessage_KeepOutInCone::mutable_frombodyname() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.KeepOutInCone.fromBodyName)
  return frombodyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_KeepOutInCone::release_frombodyname() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.KeepOutInCone.fromBodyName)
  
  return frombodyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_KeepOutInCone::set_allocated_frombodyname(::std::string* frombodyname) {
  if (frombodyname != NULL) {
    
  } else {
    
  }
  frombodyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frombodyname);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.KeepOutInCone.fromBodyName)
}

// string toBodyName = 7;
inline void VizMessage_KeepOutInCone::clear_tobodyname() {
  tobodyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_KeepOutInCone::tobodyname() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.KeepOutInCone.toBodyName)
  return tobodyname_.GetNoArena();
}
inline void VizMessage_KeepOutInCone::set_tobodyname(const ::std::string& value) {
  
  tobodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.KeepOutInCone.toBodyName)
}
#if LANG_CXX11
inline void VizMessage_KeepOutInCone::set_tobodyname(::std::string&& value) {
  
  tobodyname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.KeepOutInCone.toBodyName)
}
#endif
inline void VizMessage_KeepOutInCone::set_tobodyname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tobodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.KeepOutInCone.toBodyName)
}
inline void VizMessage_KeepOutInCone::set_tobodyname(const char* value, size_t size) {
  
  tobodyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.KeepOutInCone.toBodyName)
}
inline ::std::string* VizMessage_KeepOutInCone::mutable_tobodyname() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.KeepOutInCone.toBodyName)
  return tobodyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_KeepOutInCone::release_tobodyname() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.KeepOutInCone.toBodyName)
  
  return tobodyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_KeepOutInCone::set_allocated_tobodyname(::std::string* tobodyname) {
  if (tobodyname != NULL) {
    
  } else {
    
  }
  tobodyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tobodyname);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.KeepOutInCone.toBodyName)
}

// repeated int64 coneColor = 8;
inline int VizMessage_KeepOutInCone::conecolor_size() const {
  return conecolor_.size();
}
inline void VizMessage_KeepOutInCone::clear_conecolor() {
  conecolor_.Clear();
}
inline ::google::protobuf::int64 VizMessage_KeepOutInCone::conecolor(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.KeepOutInCone.coneColor)
  return conecolor_.Get(index);
}
inline void VizMessage_KeepOutInCone::set_conecolor(int index, ::google::protobuf::int64 value) {
  conecolor_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.KeepOutInCone.coneColor)
}
inline void VizMessage_KeepOutInCone::add_conecolor(::google::protobuf::int64 value) {
  conecolor_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.KeepOutInCone.coneColor)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
VizMessage_KeepOutInCone::conecolor() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.KeepOutInCone.coneColor)
  return conecolor_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
VizMessage_KeepOutInCone::mutable_conecolor() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.KeepOutInCone.coneColor)
  return &conecolor_;
}

// string coneName = 9;
inline void VizMessage_KeepOutInCone::clear_conename() {
  conename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_KeepOutInCone::conename() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.KeepOutInCone.coneName)
  return conename_.GetNoArena();
}
inline void VizMessage_KeepOutInCone::set_conename(const ::std::string& value) {
  
  conename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.KeepOutInCone.coneName)
}
#if LANG_CXX11
inline void VizMessage_KeepOutInCone::set_conename(::std::string&& value) {
  
  conename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.KeepOutInCone.coneName)
}
#endif
inline void VizMessage_KeepOutInCone::set_conename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  conename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.KeepOutInCone.coneName)
}
inline void VizMessage_KeepOutInCone::set_conename(const char* value, size_t size) {
  
  conename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.KeepOutInCone.coneName)
}
inline ::std::string* VizMessage_KeepOutInCone::mutable_conename() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.KeepOutInCone.coneName)
  return conename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_KeepOutInCone::release_conename() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.KeepOutInCone.coneName)
  
  return conename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_KeepOutInCone::set_allocated_conename(::std::string* conename) {
  if (conename != NULL) {
    
  } else {
    
  }
  conename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conename);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.KeepOutInCone.coneName)
}

// -------------------------------------------------------------------

// VizMessage_StandardCameraSettings

// string spacecraftName = 1;
inline void VizMessage_StandardCameraSettings::clear_spacecraftname() {
  spacecraftname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_StandardCameraSettings::spacecraftname() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StandardCameraSettings.spacecraftName)
  return spacecraftname_.GetNoArena();
}
inline void VizMessage_StandardCameraSettings::set_spacecraftname(const ::std::string& value) {
  
  spacecraftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StandardCameraSettings.spacecraftName)
}
#if LANG_CXX11
inline void VizMessage_StandardCameraSettings::set_spacecraftname(::std::string&& value) {
  
  spacecraftname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.StandardCameraSettings.spacecraftName)
}
#endif
inline void VizMessage_StandardCameraSettings::set_spacecraftname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spacecraftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.StandardCameraSettings.spacecraftName)
}
inline void VizMessage_StandardCameraSettings::set_spacecraftname(const char* value, size_t size) {
  
  spacecraftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.StandardCameraSettings.spacecraftName)
}
inline ::std::string* VizMessage_StandardCameraSettings::mutable_spacecraftname() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.StandardCameraSettings.spacecraftName)
  return spacecraftname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_StandardCameraSettings::release_spacecraftname() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.StandardCameraSettings.spacecraftName)
  
  return spacecraftname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_StandardCameraSettings::set_allocated_spacecraftname(::std::string* spacecraftname) {
  if (spacecraftname != NULL) {
    
  } else {
    
  }
  spacecraftname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spacecraftname);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.StandardCameraSettings.spacecraftName)
}

// int32 setMode = 3;
inline void VizMessage_StandardCameraSettings::clear_setmode() {
  setmode_ = 0;
}
inline ::google::protobuf::int32 VizMessage_StandardCameraSettings::setmode() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StandardCameraSettings.setMode)
  return setmode_;
}
inline void VizMessage_StandardCameraSettings::set_setmode(::google::protobuf::int32 value) {
  
  setmode_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StandardCameraSettings.setMode)
}

// double fieldOfView = 5;
inline void VizMessage_StandardCameraSettings::clear_fieldofview() {
  fieldofview_ = 0;
}
inline double VizMessage_StandardCameraSettings::fieldofview() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StandardCameraSettings.fieldOfView)
  return fieldofview_;
}
inline void VizMessage_StandardCameraSettings::set_fieldofview(double value) {
  
  fieldofview_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StandardCameraSettings.fieldOfView)
}

// string bodyTarget = 6;
inline void VizMessage_StandardCameraSettings::clear_bodytarget() {
  bodytarget_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_StandardCameraSettings::bodytarget() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StandardCameraSettings.bodyTarget)
  return bodytarget_.GetNoArena();
}
inline void VizMessage_StandardCameraSettings::set_bodytarget(const ::std::string& value) {
  
  bodytarget_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StandardCameraSettings.bodyTarget)
}
#if LANG_CXX11
inline void VizMessage_StandardCameraSettings::set_bodytarget(::std::string&& value) {
  
  bodytarget_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.StandardCameraSettings.bodyTarget)
}
#endif
inline void VizMessage_StandardCameraSettings::set_bodytarget(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bodytarget_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.StandardCameraSettings.bodyTarget)
}
inline void VizMessage_StandardCameraSettings::set_bodytarget(const char* value, size_t size) {
  
  bodytarget_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.StandardCameraSettings.bodyTarget)
}
inline ::std::string* VizMessage_StandardCameraSettings::mutable_bodytarget() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.StandardCameraSettings.bodyTarget)
  return bodytarget_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_StandardCameraSettings::release_bodytarget() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.StandardCameraSettings.bodyTarget)
  
  return bodytarget_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_StandardCameraSettings::set_allocated_bodytarget(::std::string* bodytarget) {
  if (bodytarget != NULL) {
    
  } else {
    
  }
  bodytarget_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bodytarget);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.StandardCameraSettings.bodyTarget)
}

// int32 setView = 7;
inline void VizMessage_StandardCameraSettings::clear_setview() {
  setview_ = 0;
}
inline ::google::protobuf::int32 VizMessage_StandardCameraSettings::setview() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StandardCameraSettings.setView)
  return setview_;
}
inline void VizMessage_StandardCameraSettings::set_setview(::google::protobuf::int32 value) {
  
  setview_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StandardCameraSettings.setView)
}

// repeated double pointingVector = 8;
inline int VizMessage_StandardCameraSettings::pointingvector_size() const {
  return pointingvector_.size();
}
inline void VizMessage_StandardCameraSettings::clear_pointingvector() {
  pointingvector_.Clear();
}
inline double VizMessage_StandardCameraSettings::pointingvector(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StandardCameraSettings.pointingVector)
  return pointingvector_.Get(index);
}
inline void VizMessage_StandardCameraSettings::set_pointingvector(int index, double value) {
  pointingvector_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StandardCameraSettings.pointingVector)
}
inline void VizMessage_StandardCameraSettings::add_pointingvector(double value) {
  pointingvector_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.StandardCameraSettings.pointingVector)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_StandardCameraSettings::pointingvector() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.StandardCameraSettings.pointingVector)
  return pointingvector_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_StandardCameraSettings::mutable_pointingvector() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.StandardCameraSettings.pointingVector)
  return &pointingvector_;
}

// repeated double position = 9;
inline int VizMessage_StandardCameraSettings::position_size() const {
  return position_.size();
}
inline void VizMessage_StandardCameraSettings::clear_position() {
  position_.Clear();
}
inline double VizMessage_StandardCameraSettings::position(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.StandardCameraSettings.position)
  return position_.Get(index);
}
inline void VizMessage_StandardCameraSettings::set_position(int index, double value) {
  position_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.StandardCameraSettings.position)
}
inline void VizMessage_StandardCameraSettings::add_position(double value) {
  position_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.StandardCameraSettings.position)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_StandardCameraSettings::position() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.StandardCameraSettings.position)
  return position_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_StandardCameraSettings::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.StandardCameraSettings.position)
  return &position_;
}

// -------------------------------------------------------------------

// VizMessage_ActuatorSettings

// string spacecraftName = 1;
inline void VizMessage_ActuatorSettings::clear_spacecraftname() {
  spacecraftname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_ActuatorSettings::spacecraftname() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ActuatorSettings.spacecraftName)
  return spacecraftname_.GetNoArena();
}
inline void VizMessage_ActuatorSettings::set_spacecraftname(const ::std::string& value) {
  
  spacecraftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ActuatorSettings.spacecraftName)
}
#if LANG_CXX11
inline void VizMessage_ActuatorSettings::set_spacecraftname(::std::string&& value) {
  
  spacecraftname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.ActuatorSettings.spacecraftName)
}
#endif
inline void VizMessage_ActuatorSettings::set_spacecraftname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spacecraftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.ActuatorSettings.spacecraftName)
}
inline void VizMessage_ActuatorSettings::set_spacecraftname(const char* value, size_t size) {
  
  spacecraftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.ActuatorSettings.spacecraftName)
}
inline ::std::string* VizMessage_ActuatorSettings::mutable_spacecraftname() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.ActuatorSettings.spacecraftName)
  return spacecraftname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_ActuatorSettings::release_spacecraftname() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.ActuatorSettings.spacecraftName)
  
  return spacecraftname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_ActuatorSettings::set_allocated_spacecraftname(::std::string* spacecraftname) {
  if (spacecraftname != NULL) {
    
  } else {
    
  }
  spacecraftname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spacecraftname);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.ActuatorSettings.spacecraftName)
}

// int32 viewThrusterPanel = 2;
inline void VizMessage_ActuatorSettings::clear_viewthrusterpanel() {
  viewthrusterpanel_ = 0;
}
inline ::google::protobuf::int32 VizMessage_ActuatorSettings::viewthrusterpanel() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ActuatorSettings.viewThrusterPanel)
  return viewthrusterpanel_;
}
inline void VizMessage_ActuatorSettings::set_viewthrusterpanel(::google::protobuf::int32 value) {
  
  viewthrusterpanel_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ActuatorSettings.viewThrusterPanel)
}

// int32 viewThrusterHUD = 3;
inline void VizMessage_ActuatorSettings::clear_viewthrusterhud() {
  viewthrusterhud_ = 0;
}
inline ::google::protobuf::int32 VizMessage_ActuatorSettings::viewthrusterhud() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ActuatorSettings.viewThrusterHUD)
  return viewthrusterhud_;
}
inline void VizMessage_ActuatorSettings::set_viewthrusterhud(::google::protobuf::int32 value) {
  
  viewthrusterhud_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ActuatorSettings.viewThrusterHUD)
}

// int32 viewRWPanel = 4;
inline void VizMessage_ActuatorSettings::clear_viewrwpanel() {
  viewrwpanel_ = 0;
}
inline ::google::protobuf::int32 VizMessage_ActuatorSettings::viewrwpanel() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ActuatorSettings.viewRWPanel)
  return viewrwpanel_;
}
inline void VizMessage_ActuatorSettings::set_viewrwpanel(::google::protobuf::int32 value) {
  
  viewrwpanel_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ActuatorSettings.viewRWPanel)
}

// int32 viewRWHUD = 5;
inline void VizMessage_ActuatorSettings::clear_viewrwhud() {
  viewrwhud_ = 0;
}
inline ::google::protobuf::int32 VizMessage_ActuatorSettings::viewrwhud() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ActuatorSettings.viewRWHUD)
  return viewrwhud_;
}
inline void VizMessage_ActuatorSettings::set_viewrwhud(::google::protobuf::int32 value) {
  
  viewrwhud_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ActuatorSettings.viewRWHUD)
}

// int32 showThrusterLabels = 6;
inline void VizMessage_ActuatorSettings::clear_showthrusterlabels() {
  showthrusterlabels_ = 0;
}
inline ::google::protobuf::int32 VizMessage_ActuatorSettings::showthrusterlabels() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ActuatorSettings.showThrusterLabels)
  return showthrusterlabels_;
}
inline void VizMessage_ActuatorSettings::set_showthrusterlabels(::google::protobuf::int32 value) {
  
  showthrusterlabels_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ActuatorSettings.showThrusterLabels)
}

// int32 showRWLabels = 7;
inline void VizMessage_ActuatorSettings::clear_showrwlabels() {
  showrwlabels_ = 0;
}
inline ::google::protobuf::int32 VizMessage_ActuatorSettings::showrwlabels() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.ActuatorSettings.showRWLabels)
  return showrwlabels_;
}
inline void VizMessage_ActuatorSettings::set_showrwlabels(::google::protobuf::int32 value) {
  
  showrwlabels_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.ActuatorSettings.showRWLabels)
}

// -------------------------------------------------------------------

// VizMessage_CustomModel

// string modelPath = 1;
inline void VizMessage_CustomModel::clear_modelpath() {
  modelpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_CustomModel::modelpath() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CustomModel.modelPath)
  return modelpath_.GetNoArena();
}
inline void VizMessage_CustomModel::set_modelpath(const ::std::string& value) {
  
  modelpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CustomModel.modelPath)
}
#if LANG_CXX11
inline void VizMessage_CustomModel::set_modelpath(::std::string&& value) {
  
  modelpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.CustomModel.modelPath)
}
#endif
inline void VizMessage_CustomModel::set_modelpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  modelpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.CustomModel.modelPath)
}
inline void VizMessage_CustomModel::set_modelpath(const char* value, size_t size) {
  
  modelpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.CustomModel.modelPath)
}
inline ::std::string* VizMessage_CustomModel::mutable_modelpath() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.CustomModel.modelPath)
  return modelpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_CustomModel::release_modelpath() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.CustomModel.modelPath)
  
  return modelpath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_CustomModel::set_allocated_modelpath(::std::string* modelpath) {
  if (modelpath != NULL) {
    
  } else {
    
  }
  modelpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modelpath);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.CustomModel.modelPath)
}

// repeated string simBodiesToModify = 2;
inline int VizMessage_CustomModel::simbodiestomodify_size() const {
  return simbodiestomodify_.size();
}
inline void VizMessage_CustomModel::clear_simbodiestomodify() {
  simbodiestomodify_.Clear();
}
inline const ::std::string& VizMessage_CustomModel::simbodiestomodify(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
  return simbodiestomodify_.Get(index);
}
inline ::std::string* VizMessage_CustomModel::mutable_simbodiestomodify(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
  return simbodiestomodify_.Mutable(index);
}
inline void VizMessage_CustomModel::set_simbodiestomodify(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
  simbodiestomodify_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void VizMessage_CustomModel::set_simbodiestomodify(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
  simbodiestomodify_.Mutable(index)->assign(std::move(value));
}
#endif
inline void VizMessage_CustomModel::set_simbodiestomodify(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  simbodiestomodify_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
}
inline void VizMessage_CustomModel::set_simbodiestomodify(int index, const char* value, size_t size) {
  simbodiestomodify_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
}
inline ::std::string* VizMessage_CustomModel::add_simbodiestomodify() {
  // @@protoc_insertion_point(field_add_mutable:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
  return simbodiestomodify_.Add();
}
inline void VizMessage_CustomModel::add_simbodiestomodify(const ::std::string& value) {
  simbodiestomodify_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
}
#if LANG_CXX11
inline void VizMessage_CustomModel::add_simbodiestomodify(::std::string&& value) {
  simbodiestomodify_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
}
#endif
inline void VizMessage_CustomModel::add_simbodiestomodify(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  simbodiestomodify_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
}
inline void VizMessage_CustomModel::add_simbodiestomodify(const char* value, size_t size) {
  simbodiestomodify_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
VizMessage_CustomModel::simbodiestomodify() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
  return simbodiestomodify_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
VizMessage_CustomModel::mutable_simbodiestomodify() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CustomModel.simBodiesToModify)
  return &simbodiestomodify_;
}

// repeated double offset = 3;
inline int VizMessage_CustomModel::offset_size() const {
  return offset_.size();
}
inline void VizMessage_CustomModel::clear_offset() {
  offset_.Clear();
}
inline double VizMessage_CustomModel::offset(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CustomModel.offset)
  return offset_.Get(index);
}
inline void VizMessage_CustomModel::set_offset(int index, double value) {
  offset_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CustomModel.offset)
}
inline void VizMessage_CustomModel::add_offset(double value) {
  offset_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CustomModel.offset)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CustomModel::offset() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CustomModel.offset)
  return offset_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CustomModel::mutable_offset() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CustomModel.offset)
  return &offset_;
}

// repeated double rotation = 4;
inline int VizMessage_CustomModel::rotation_size() const {
  return rotation_.size();
}
inline void VizMessage_CustomModel::clear_rotation() {
  rotation_.Clear();
}
inline double VizMessage_CustomModel::rotation(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CustomModel.rotation)
  return rotation_.Get(index);
}
inline void VizMessage_CustomModel::set_rotation(int index, double value) {
  rotation_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CustomModel.rotation)
}
inline void VizMessage_CustomModel::add_rotation(double value) {
  rotation_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CustomModel.rotation)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CustomModel::rotation() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CustomModel.rotation)
  return rotation_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CustomModel::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CustomModel.rotation)
  return &rotation_;
}

// repeated double scale = 5;
inline int VizMessage_CustomModel::scale_size() const {
  return scale_.size();
}
inline void VizMessage_CustomModel::clear_scale() {
  scale_.Clear();
}
inline double VizMessage_CustomModel::scale(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CustomModel.scale)
  return scale_.Get(index);
}
inline void VizMessage_CustomModel::set_scale(int index, double value) {
  scale_.Set(index, value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CustomModel.scale)
}
inline void VizMessage_CustomModel::add_scale(double value) {
  scale_.Add(value);
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.CustomModel.scale)
}
inline const ::google::protobuf::RepeatedField< double >&
VizMessage_CustomModel::scale() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.CustomModel.scale)
  return scale_;
}
inline ::google::protobuf::RepeatedField< double >*
VizMessage_CustomModel::mutable_scale() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.CustomModel.scale)
  return &scale_;
}

// string customTexturePath = 6;
inline void VizMessage_CustomModel::clear_customtexturepath() {
  customtexturepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_CustomModel::customtexturepath() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CustomModel.customTexturePath)
  return customtexturepath_.GetNoArena();
}
inline void VizMessage_CustomModel::set_customtexturepath(const ::std::string& value) {
  
  customtexturepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CustomModel.customTexturePath)
}
#if LANG_CXX11
inline void VizMessage_CustomModel::set_customtexturepath(::std::string&& value) {
  
  customtexturepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.CustomModel.customTexturePath)
}
#endif
inline void VizMessage_CustomModel::set_customtexturepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  customtexturepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.CustomModel.customTexturePath)
}
inline void VizMessage_CustomModel::set_customtexturepath(const char* value, size_t size) {
  
  customtexturepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.CustomModel.customTexturePath)
}
inline ::std::string* VizMessage_CustomModel::mutable_customtexturepath() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.CustomModel.customTexturePath)
  return customtexturepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_CustomModel::release_customtexturepath() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.CustomModel.customTexturePath)
  
  return customtexturepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_CustomModel::set_allocated_customtexturepath(::std::string* customtexturepath) {
  if (customtexturepath != NULL) {
    
  } else {
    
  }
  customtexturepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customtexturepath);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.CustomModel.customTexturePath)
}

// string normalMapPath = 7;
inline void VizMessage_CustomModel::clear_normalmappath() {
  normalmappath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_CustomModel::normalmappath() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CustomModel.normalMapPath)
  return normalmappath_.GetNoArena();
}
inline void VizMessage_CustomModel::set_normalmappath(const ::std::string& value) {
  
  normalmappath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CustomModel.normalMapPath)
}
#if LANG_CXX11
inline void VizMessage_CustomModel::set_normalmappath(::std::string&& value) {
  
  normalmappath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.CustomModel.normalMapPath)
}
#endif
inline void VizMessage_CustomModel::set_normalmappath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  normalmappath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.CustomModel.normalMapPath)
}
inline void VizMessage_CustomModel::set_normalmappath(const char* value, size_t size) {
  
  normalmappath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.CustomModel.normalMapPath)
}
inline ::std::string* VizMessage_CustomModel::mutable_normalmappath() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.CustomModel.normalMapPath)
  return normalmappath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_CustomModel::release_normalmappath() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.CustomModel.normalMapPath)
  
  return normalmappath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_CustomModel::set_allocated_normalmappath(::std::string* normalmappath) {
  if (normalmappath != NULL) {
    
  } else {
    
  }
  normalmappath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), normalmappath);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.CustomModel.normalMapPath)
}

// int32 shader = 8;
inline void VizMessage_CustomModel::clear_shader() {
  shader_ = 0;
}
inline ::google::protobuf::int32 VizMessage_CustomModel::shader() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.CustomModel.shader)
  return shader_;
}
inline void VizMessage_CustomModel::set_shader(::google::protobuf::int32 value) {
  
  shader_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.CustomModel.shader)
}

// -------------------------------------------------------------------

// VizMessage_VizSettingsPb

// double ambient = 1;
inline void VizMessage_VizSettingsPb::clear_ambient() {
  ambient_ = 0;
}
inline double VizMessage_VizSettingsPb::ambient() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.ambient)
  return ambient_;
}
inline void VizMessage_VizSettingsPb::set_ambient(double value) {
  
  ambient_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.ambient)
}

// int32 orbitLinesOn = 2;
inline void VizMessage_VizSettingsPb::clear_orbitlineson() {
  orbitlineson_ = 0;
}
inline ::google::protobuf::int32 VizMessage_VizSettingsPb::orbitlineson() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.orbitLinesOn)
  return orbitlineson_;
}
inline void VizMessage_VizSettingsPb::set_orbitlineson(::google::protobuf::int32 value) {
  
  orbitlineson_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.orbitLinesOn)
}

// int32 spacecraftCSon = 3;
inline void VizMessage_VizSettingsPb::clear_spacecraftcson() {
  spacecraftcson_ = 0;
}
inline ::google::protobuf::int32 VizMessage_VizSettingsPb::spacecraftcson() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.spacecraftCSon)
  return spacecraftcson_;
}
inline void VizMessage_VizSettingsPb::set_spacecraftcson(::google::protobuf::int32 value) {
  
  spacecraftcson_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.spacecraftCSon)
}

// int32 planetCSon = 4;
inline void VizMessage_VizSettingsPb::clear_planetcson() {
  planetcson_ = 0;
}
inline ::google::protobuf::int32 VizMessage_VizSettingsPb::planetcson() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.planetCSon)
  return planetcson_;
}
inline void VizMessage_VizSettingsPb::set_planetcson(::google::protobuf::int32 value) {
  
  planetcson_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.planetCSon)
}

// repeated .vizProtobufferMessage.VizMessage.PointLine pointLines = 5;
inline int VizMessage_VizSettingsPb::pointlines_size() const {
  return pointlines_.size();
}
inline void VizMessage_VizSettingsPb::clear_pointlines() {
  pointlines_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_PointLine& VizMessage_VizSettingsPb::pointlines(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.pointLines)
  return pointlines_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_PointLine* VizMessage_VizSettingsPb::mutable_pointlines(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.VizSettingsPb.pointLines)
  return pointlines_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_PointLine* VizMessage_VizSettingsPb::add_pointlines() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.VizSettingsPb.pointLines)
  return pointlines_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_PointLine >*
VizMessage_VizSettingsPb::mutable_pointlines() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.VizSettingsPb.pointLines)
  return &pointlines_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_PointLine >&
VizMessage_VizSettingsPb::pointlines() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.VizSettingsPb.pointLines)
  return pointlines_;
}

// repeated .vizProtobufferMessage.VizMessage.KeepOutInCone keepOutInCones = 6;
inline int VizMessage_VizSettingsPb::keepoutincones_size() const {
  return keepoutincones_.size();
}
inline void VizMessage_VizSettingsPb::clear_keepoutincones() {
  keepoutincones_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_KeepOutInCone& VizMessage_VizSettingsPb::keepoutincones(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.keepOutInCones)
  return keepoutincones_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_KeepOutInCone* VizMessage_VizSettingsPb::mutable_keepoutincones(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.VizSettingsPb.keepOutInCones)
  return keepoutincones_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_KeepOutInCone* VizMessage_VizSettingsPb::add_keepoutincones() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.VizSettingsPb.keepOutInCones)
  return keepoutincones_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_KeepOutInCone >*
VizMessage_VizSettingsPb::mutable_keepoutincones() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.VizSettingsPb.keepOutInCones)
  return &keepoutincones_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_KeepOutInCone >&
VizMessage_VizSettingsPb::keepoutincones() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.VizSettingsPb.keepOutInCones)
  return keepoutincones_;
}

// repeated .vizProtobufferMessage.VizMessage.StandardCameraSettings standardCameraSettings = 7;
inline int VizMessage_VizSettingsPb::standardcamerasettings_size() const {
  return standardcamerasettings_.size();
}
inline void VizMessage_VizSettingsPb::clear_standardcamerasettings() {
  standardcamerasettings_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_StandardCameraSettings& VizMessage_VizSettingsPb::standardcamerasettings(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.standardCameraSettings)
  return standardcamerasettings_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_StandardCameraSettings* VizMessage_VizSettingsPb::mutable_standardcamerasettings(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.VizSettingsPb.standardCameraSettings)
  return standardcamerasettings_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_StandardCameraSettings* VizMessage_VizSettingsPb::add_standardcamerasettings() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.VizSettingsPb.standardCameraSettings)
  return standardcamerasettings_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StandardCameraSettings >*
VizMessage_VizSettingsPb::mutable_standardcamerasettings() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.VizSettingsPb.standardCameraSettings)
  return &standardcamerasettings_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_StandardCameraSettings >&
VizMessage_VizSettingsPb::standardcamerasettings() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.VizSettingsPb.standardCameraSettings)
  return standardcamerasettings_;
}

// repeated .vizProtobufferMessage.VizMessage.ActuatorSettings actuatorSettings = 10;
inline int VizMessage_VizSettingsPb::actuatorsettings_size() const {
  return actuatorsettings_.size();
}
inline void VizMessage_VizSettingsPb::clear_actuatorsettings() {
  actuatorsettings_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_ActuatorSettings& VizMessage_VizSettingsPb::actuatorsettings(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.actuatorSettings)
  return actuatorsettings_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_ActuatorSettings* VizMessage_VizSettingsPb::mutable_actuatorsettings(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.VizSettingsPb.actuatorSettings)
  return actuatorsettings_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_ActuatorSettings* VizMessage_VizSettingsPb::add_actuatorsettings() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.VizSettingsPb.actuatorSettings)
  return actuatorsettings_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ActuatorSettings >*
VizMessage_VizSettingsPb::mutable_actuatorsettings() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.VizSettingsPb.actuatorSettings)
  return &actuatorsettings_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_ActuatorSettings >&
VizMessage_VizSettingsPb::actuatorsettings() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.VizSettingsPb.actuatorSettings)
  return actuatorsettings_;
}

// string skybox = 11;
inline void VizMessage_VizSettingsPb::clear_skybox() {
  skybox_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_VizSettingsPb::skybox() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.skybox)
  return skybox_.GetNoArena();
}
inline void VizMessage_VizSettingsPb::set_skybox(const ::std::string& value) {
  
  skybox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.skybox)
}
#if LANG_CXX11
inline void VizMessage_VizSettingsPb::set_skybox(::std::string&& value) {
  
  skybox_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.VizSettingsPb.skybox)
}
#endif
inline void VizMessage_VizSettingsPb::set_skybox(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  skybox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.VizSettingsPb.skybox)
}
inline void VizMessage_VizSettingsPb::set_skybox(const char* value, size_t size) {
  
  skybox_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.VizSettingsPb.skybox)
}
inline ::std::string* VizMessage_VizSettingsPb::mutable_skybox() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.VizSettingsPb.skybox)
  return skybox_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_VizSettingsPb::release_skybox() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.VizSettingsPb.skybox)
  
  return skybox_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_VizSettingsPb::set_allocated_skybox(::std::string* skybox) {
  if (skybox != NULL) {
    
  } else {
    
  }
  skybox_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skybox);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.VizSettingsPb.skybox)
}

// repeated .vizProtobufferMessage.VizMessage.CustomModel customModels = 12;
inline int VizMessage_VizSettingsPb::custommodels_size() const {
  return custommodels_.size();
}
inline void VizMessage_VizSettingsPb::clear_custommodels() {
  custommodels_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_CustomModel& VizMessage_VizSettingsPb::custommodels(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.customModels)
  return custommodels_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_CustomModel* VizMessage_VizSettingsPb::mutable_custommodels(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.VizSettingsPb.customModels)
  return custommodels_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_CustomModel* VizMessage_VizSettingsPb::add_custommodels() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.VizSettingsPb.customModels)
  return custommodels_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CustomModel >*
VizMessage_VizSettingsPb::mutable_custommodels() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.VizSettingsPb.customModels)
  return &custommodels_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CustomModel >&
VizMessage_VizSettingsPb::custommodels() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.VizSettingsPb.customModels)
  return custommodels_;
}

// int32 viewCameraBoresightHUD = 13;
inline void VizMessage_VizSettingsPb::clear_viewcameraboresighthud() {
  viewcameraboresighthud_ = 0;
}
inline ::google::protobuf::int32 VizMessage_VizSettingsPb::viewcameraboresighthud() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.viewCameraBoresightHUD)
  return viewcameraboresighthud_;
}
inline void VizMessage_VizSettingsPb::set_viewcameraboresighthud(::google::protobuf::int32 value) {
  
  viewcameraboresighthud_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.viewCameraBoresightHUD)
}

// int32 viewCameraConeHUD = 14;
inline void VizMessage_VizSettingsPb::clear_viewcameraconehud() {
  viewcameraconehud_ = 0;
}
inline ::google::protobuf::int32 VizMessage_VizSettingsPb::viewcameraconehud() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.viewCameraConeHUD)
  return viewcameraconehud_;
}
inline void VizMessage_VizSettingsPb::set_viewcameraconehud(::google::protobuf::int32 value) {
  
  viewcameraconehud_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.viewCameraConeHUD)
}

// int32 showCSLabels = 15;
inline void VizMessage_VizSettingsPb::clear_showcslabels() {
  showcslabels_ = 0;
}
inline ::google::protobuf::int32 VizMessage_VizSettingsPb::showcslabels() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.showCSLabels)
  return showcslabels_;
}
inline void VizMessage_VizSettingsPb::set_showcslabels(::google::protobuf::int32 value) {
  
  showcslabels_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.showCSLabels)
}

// int32 showCelestialBodyLabels = 16;
inline void VizMessage_VizSettingsPb::clear_showcelestialbodylabels() {
  showcelestialbodylabels_ = 0;
}
inline ::google::protobuf::int32 VizMessage_VizSettingsPb::showcelestialbodylabels() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.showCelestialBodyLabels)
  return showcelestialbodylabels_;
}
inline void VizMessage_VizSettingsPb::set_showcelestialbodylabels(::google::protobuf::int32 value) {
  
  showcelestialbodylabels_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.showCelestialBodyLabels)
}

// int32 showSpacecraftLabels = 17;
inline void VizMessage_VizSettingsPb::clear_showspacecraftlabels() {
  showspacecraftlabels_ = 0;
}
inline ::google::protobuf::int32 VizMessage_VizSettingsPb::showspacecraftlabels() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.showSpacecraftLabels)
  return showspacecraftlabels_;
}
inline void VizMessage_VizSettingsPb::set_showspacecraftlabels(::google::protobuf::int32 value) {
  
  showspacecraftlabels_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.showSpacecraftLabels)
}

// int32 showCameraLabels = 18;
inline void VizMessage_VizSettingsPb::clear_showcameralabels() {
  showcameralabels_ = 0;
}
inline ::google::protobuf::int32 VizMessage_VizSettingsPb::showcameralabels() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.showCameraLabels)
  return showcameralabels_;
}
inline void VizMessage_VizSettingsPb::set_showcameralabels(::google::protobuf::int32 value) {
  
  showcameralabels_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.showCameraLabels)
}

// double customGUIScale = 19;
inline void VizMessage_VizSettingsPb::clear_customguiscale() {
  customguiscale_ = 0;
}
inline double VizMessage_VizSettingsPb::customguiscale() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.customGUIScale)
  return customguiscale_;
}
inline void VizMessage_VizSettingsPb::set_customguiscale(double value) {
  
  customguiscale_ = value;
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.customGUIScale)
}

// string defaultSpacecraftSprite = 20;
inline void VizMessage_VizSettingsPb::clear_defaultspacecraftsprite() {
  defaultspacecraftsprite_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VizMessage_VizSettingsPb::defaultspacecraftsprite() const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.VizSettingsPb.defaultSpacecraftSprite)
  return defaultspacecraftsprite_.GetNoArena();
}
inline void VizMessage_VizSettingsPb::set_defaultspacecraftsprite(const ::std::string& value) {
  
  defaultspacecraftsprite_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vizProtobufferMessage.VizMessage.VizSettingsPb.defaultSpacecraftSprite)
}
#if LANG_CXX11
inline void VizMessage_VizSettingsPb::set_defaultspacecraftsprite(::std::string&& value) {
  
  defaultspacecraftsprite_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:vizProtobufferMessage.VizMessage.VizSettingsPb.defaultSpacecraftSprite)
}
#endif
inline void VizMessage_VizSettingsPb::set_defaultspacecraftsprite(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  defaultspacecraftsprite_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vizProtobufferMessage.VizMessage.VizSettingsPb.defaultSpacecraftSprite)
}
inline void VizMessage_VizSettingsPb::set_defaultspacecraftsprite(const char* value, size_t size) {
  
  defaultspacecraftsprite_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vizProtobufferMessage.VizMessage.VizSettingsPb.defaultSpacecraftSprite)
}
inline ::std::string* VizMessage_VizSettingsPb::mutable_defaultspacecraftsprite() {
  
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.VizSettingsPb.defaultSpacecraftSprite)
  return defaultspacecraftsprite_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VizMessage_VizSettingsPb::release_defaultspacecraftsprite() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.VizSettingsPb.defaultSpacecraftSprite)
  
  return defaultspacecraftsprite_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VizMessage_VizSettingsPb::set_allocated_defaultspacecraftsprite(::std::string* defaultspacecraftsprite) {
  if (defaultspacecraftsprite != NULL) {
    
  } else {
    
  }
  defaultspacecraftsprite_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), defaultspacecraftsprite);
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.VizSettingsPb.defaultSpacecraftSprite)
}

// -------------------------------------------------------------------

// VizMessage

// .vizProtobufferMessage.VizMessage.TimeStamp currentTime = 1;
inline bool VizMessage::has_currenttime() const {
  return this != internal_default_instance() && currenttime_ != NULL;
}
inline void VizMessage::clear_currenttime() {
  if (GetArenaNoVirtual() == NULL && currenttime_ != NULL) {
    delete currenttime_;
  }
  currenttime_ = NULL;
}
inline const ::vizProtobufferMessage::VizMessage_TimeStamp& VizMessage::currenttime() const {
  const ::vizProtobufferMessage::VizMessage_TimeStamp* p = currenttime_;
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.currentTime)
  return p != NULL ? *p : *reinterpret_cast<const ::vizProtobufferMessage::VizMessage_TimeStamp*>(
      &::vizProtobufferMessage::_VizMessage_TimeStamp_default_instance_);
}
inline ::vizProtobufferMessage::VizMessage_TimeStamp* VizMessage::release_currenttime() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.currentTime)
  
  ::vizProtobufferMessage::VizMessage_TimeStamp* temp = currenttime_;
  currenttime_ = NULL;
  return temp;
}
inline ::vizProtobufferMessage::VizMessage_TimeStamp* VizMessage::mutable_currenttime() {
  
  if (currenttime_ == NULL) {
    currenttime_ = new ::vizProtobufferMessage::VizMessage_TimeStamp;
  }
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.currentTime)
  return currenttime_;
}
inline void VizMessage::set_allocated_currenttime(::vizProtobufferMessage::VizMessage_TimeStamp* currenttime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete currenttime_;
  }
  if (currenttime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      currenttime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, currenttime, submessage_arena);
    }
    
  } else {
    
  }
  currenttime_ = currenttime;
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.currentTime)
}

// repeated .vizProtobufferMessage.VizMessage.CelestialBody celestialBodies = 2;
inline int VizMessage::celestialbodies_size() const {
  return celestialbodies_.size();
}
inline void VizMessage::clear_celestialbodies() {
  celestialbodies_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_CelestialBody& VizMessage::celestialbodies(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.celestialBodies)
  return celestialbodies_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_CelestialBody* VizMessage::mutable_celestialbodies(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.celestialBodies)
  return celestialbodies_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_CelestialBody* VizMessage::add_celestialbodies() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.celestialBodies)
  return celestialbodies_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CelestialBody >*
VizMessage::mutable_celestialbodies() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.celestialBodies)
  return &celestialbodies_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CelestialBody >&
VizMessage::celestialbodies() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.celestialBodies)
  return celestialbodies_;
}

// repeated .vizProtobufferMessage.VizMessage.Spacecraft spacecraft = 3;
inline int VizMessage::spacecraft_size() const {
  return spacecraft_.size();
}
inline void VizMessage::clear_spacecraft() {
  spacecraft_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_Spacecraft& VizMessage::spacecraft(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.spacecraft)
  return spacecraft_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_Spacecraft* VizMessage::mutable_spacecraft(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.spacecraft)
  return spacecraft_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_Spacecraft* VizMessage::add_spacecraft() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.spacecraft)
  return spacecraft_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Spacecraft >*
VizMessage::mutable_spacecraft() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.spacecraft)
  return &spacecraft_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_Spacecraft >&
VizMessage::spacecraft() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.spacecraft)
  return spacecraft_;
}

// repeated .vizProtobufferMessage.VizMessage.CameraConfig cameras = 4;
inline int VizMessage::cameras_size() const {
  return cameras_.size();
}
inline void VizMessage::clear_cameras() {
  cameras_.Clear();
}
inline const ::vizProtobufferMessage::VizMessage_CameraConfig& VizMessage::cameras(int index) const {
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.cameras)
  return cameras_.Get(index);
}
inline ::vizProtobufferMessage::VizMessage_CameraConfig* VizMessage::mutable_cameras(int index) {
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.cameras)
  return cameras_.Mutable(index);
}
inline ::vizProtobufferMessage::VizMessage_CameraConfig* VizMessage::add_cameras() {
  // @@protoc_insertion_point(field_add:vizProtobufferMessage.VizMessage.cameras)
  return cameras_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CameraConfig >*
VizMessage::mutable_cameras() {
  // @@protoc_insertion_point(field_mutable_list:vizProtobufferMessage.VizMessage.cameras)
  return &cameras_;
}
inline const ::google::protobuf::RepeatedPtrField< ::vizProtobufferMessage::VizMessage_CameraConfig >&
VizMessage::cameras() const {
  // @@protoc_insertion_point(field_list:vizProtobufferMessage.VizMessage.cameras)
  return cameras_;
}

// .vizProtobufferMessage.VizMessage.VizSettingsPb settings = 7;
inline bool VizMessage::has_settings() const {
  return this != internal_default_instance() && settings_ != NULL;
}
inline void VizMessage::clear_settings() {
  if (GetArenaNoVirtual() == NULL && settings_ != NULL) {
    delete settings_;
  }
  settings_ = NULL;
}
inline const ::vizProtobufferMessage::VizMessage_VizSettingsPb& VizMessage::settings() const {
  const ::vizProtobufferMessage::VizMessage_VizSettingsPb* p = settings_;
  // @@protoc_insertion_point(field_get:vizProtobufferMessage.VizMessage.settings)
  return p != NULL ? *p : *reinterpret_cast<const ::vizProtobufferMessage::VizMessage_VizSettingsPb*>(
      &::vizProtobufferMessage::_VizMessage_VizSettingsPb_default_instance_);
}
inline ::vizProtobufferMessage::VizMessage_VizSettingsPb* VizMessage::release_settings() {
  // @@protoc_insertion_point(field_release:vizProtobufferMessage.VizMessage.settings)
  
  ::vizProtobufferMessage::VizMessage_VizSettingsPb* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline ::vizProtobufferMessage::VizMessage_VizSettingsPb* VizMessage::mutable_settings() {
  
  if (settings_ == NULL) {
    settings_ = new ::vizProtobufferMessage::VizMessage_VizSettingsPb;
  }
  // @@protoc_insertion_point(field_mutable:vizProtobufferMessage.VizMessage.settings)
  return settings_;
}
inline void VizMessage::set_allocated_settings(::vizProtobufferMessage::VizMessage_VizSettingsPb* settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete settings_;
  }
  if (settings) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    
  } else {
    
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:vizProtobufferMessage.VizMessage.settings)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace vizProtobufferMessage

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vizMessage_2eproto__INCLUDED
