name: "Canary Build"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-macOS-canary:
    name: macOS Latest Dependencies
    runs-on: macos-latest
    timeout-minutes: 75
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Capture initial package versions
        run: |
          pip freeze > initial_versions.txt
          echo "Initial package versions:" >> $GITHUB_STEP_SUMMARY
          cat initial_versions.txt >> $GITHUB_STEP_SUMMARY
          echo "\n" >> $GITHUB_STEP_SUMMARY
      - name: Build Basilisk
        uses: ./.github/actions/build
        with:
          python-version: ${{ matrix.python-version }}
          conan-args: --opNav True --allOptPkg --mujoco True --mujocoReplay True --pyPkgCanary True
          is-canary: true
      - name: Capture final package versions
        run: |
          pip freeze > final_versions.txt
          echo "Final package versions:" >> $GITHUB_STEP_SUMMARY
          cat final_versions.txt >> $GITHUB_STEP_SUMMARY
          echo "\n" >> $GITHUB_STEP_SUMMARY
          echo "Package version changes:" >> $GITHUB_STEP_SUMMARY
          diff -u initial_versions.txt final_versions.txt | grep -E '^[+-]' | grep -v '^+++' | grep -v '^---' >> $GITHUB_STEP_SUMMARY
      # NOTE: The documentation depends on images generated by executing the
      # Python tests successfully. As such, the "Build docs" action below
      # handles running the Python tests internally
      - name: Run C/C++ Tests
        working-directory: ./dist3
        run: ctest -C Release
        if: ${{ always() }}
      - name: Build docs
        uses: ./.github/actions/docs
        with:
          is-canary: true
      - name: Upload package version logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: package-versions
          path: |
            initial_versions.txt
            final_versions.txt
