version: 2.1

orbs:
  win: circleci/windows@2.4.0
  slack: circleci/slack@4.4.2

jobs:
  windows-build:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run:
          name: "Install swig and cmake"
          shell: powershell.exe
          command: choco install swig cmake -y
      - run:
          name: "Install python3.7"
          shell: powershell.exe
          command: choco install python --version=3.7.9 -y --force
      - run: 
          name: "Create python virtual env"
          shell: powershell.exe
          command: python -m venv venv
      - run:
          name: "Install wheel and conan package"
          shell: powershell.exe
          command: |
            venv\Scripts\activate
            pip install wheel conan
      - run:
          name: "Add basilisk and cmake path to env path"
          shell: powershell.exe
          command: |
            $oldpath = (Get-ItemProperty -Path 'Registry::HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment' -Name PATH).path
            $newpath = “$oldpath;C:\Users\circleci\project\dist3\Basilisk;C:\Program Files\CMake\bin”
            Set-ItemProperty -Path 'Registry::HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment' -Name PATH -Value $newPath
      - run:
          name: "build basilisk"
          shell: powershell.exe
          command: |
            venv\Scripts\activate
            python conanfile.py
      # vizFound is set to false which is skipping some scenarios. Also, test_bskTestScript throws windows exception
      #- run:
          #name: "Run scenario test"
          #shell: powershell.exe
          #command: |
            #venv\Scripts\activate
            #cd src\tests
            #(Get-ChildItem -File).FullName| ForEach-Object {python.exe -m pytest $_; if($LastExitCode -ne 0) {exit 1}}
      - run:
          name: "Test Simulation"
          shell: powershell.exe
          command: |
            venv\Scripts\activate
            cd src\simulation
            (Get-ChildItem -Directory).FullName | ForEach-Object { cd $_; pytest; if(($LastExitCode -ne 0) -and ($LastExitCode -ne 5)) {exit 1}}
      - run:
          name: "Test Architecture"
          shell: powershell.exe
          command: |
            venv\Scripts\activate
            cd src\architecture
            (Get-ChildItem -Directory).FullName | ForEach-Object { cd $_; pytest; if(($LastExitCode -ne 0) -and ($LastExitCode -ne 5)) {exit 1}}
      - run:
          name: "Test fswAlgorithms"
          shell: powershell.exe
          command: |
            venv\Scripts\activate
            cd src\fswAlgorithms
            (Get-ChildItem -Directory).FullName | ForEach-Object { cd $_; pytest; if(($LastExitCode -ne 0) -and ($LastExitCode -ne 5)) {exit 1}}
      # Slack documentation: https://circleci.com/developer/orbs/orb/circleci/slack
      # Disabling slack for till they fix this issue: https://github.com/CircleCI-Public/slack-orb/issues/208
      #- slack/notify:
          #branch_pattern: develop
          #event: fail
          #template: basic_fail_1
          #mentions: '@Schaub'
      #- slack/notify:
          #branch_pattern: develop
          #event: pass
          #template: basic_success_1
     
  macos-build:
    macos:
      xcode: 13.4.0
    steps:
      - checkout
      - run:
          name: "Install swig and cmake"
          command: |
            brew update
            brew doctor
            HOMEBREW_NO_AUTO_UPDATE=1 brew install swig cmake && brew link cmake
      - run: 
          name: "Create python virtual env"
          command: python3 -m venv .venv
      - run:
          name: "Install wheel and conan package"
          command: source .venv/bin/activate && pip3 install wheel conan
      - run:
          name: "build basilisk"
          command: source .venv/bin/activate && python3 conanfile.py
      - run:
          name: "install pytest-xdist"
          command: source .venv/bin/activate && pip3 install pytest-xdist
      - run:
          name: "run pytest for src"
          command: source .venv/bin/activate && cd src && pytest -n 4 -m "not scenarioTest"
      - slack/notify:
          branch_pattern: develop
          event: fail
          template: basic_fail_1
          mentions: '@Schaub'
      - slack/notify:
          branch_pattern: develop
          event: pass
          template: basic_success_1
  linux-build:
    machine:
      #Use this link for available images: https://circleci.com/docs/2.0/configuration-reference/
      image: ubuntu-2004:202104-01
    steps:
      #Default python intallation does not have --enabled-shared configured. This is to fix that.
      - run:
          name: "Reinstall with correct configuration"
          command: PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install --force 3.9.4
      - checkout
      - run:
          name: "Install swig and cmake"
          command: sudo apt-get update && sudo apt-get install build-essential swig cmake -y
      - run:
          name: "Install python packages"
          command: sudo apt-get install python3-setuptools python3-tk python3.9-venv
      - run: 
          name: "Create virtual Environment"
          command: python3 -m venv .venv
      - run:
          name: "Install wheel and conan package"
          command: source .venv/bin/activate && pip3 install wheel conan
      - run:
          name: "build basilisk"
          command: source .venv/bin/activate && python3 conanfile.py
          #Circleci exit if no output for 10 mins. messaging takes more time to build. This is to override default 10m limit
          no_output_timeout: 30m
      - run:
          name: "install python3-xdist"
          command: source .venv/bin/activate && pip3 install pytest-xdist
      - run:
          name: "Run Test"
          command: source .venv/bin/activate && cd src && pytest -n 4 -m "not scenarioTest"
      - slack/notify:
          branch_pattern: develop
          event: fail
          template: basic_fail_1
          mentions: '@Schaub'
      - slack/notify:
          branch_pattern: develop
          event: pass
          template: basic_success_1
    resource_class: large

workflows:
  version: 2
  #branch-testing:
    #jobs: 
    #- <job-name>: # either linux-build, macos-build or windows-build
        #context: slack-secrets
        #filters:
          #branches:
            #only: <branch-name>  # full path to branch on origin. Include sub-folders
  alternative:
    triggers:
      - schedule:
        # You can use the following link to figure out the cron format: https://crontab.guru/#0_0_*_*
          cron: "0 13 * * 1,3,5"
          filters:
            branches:
              only: 
              - develop 
    jobs:
    - macos-build:
        context: slack-secrets
  weekly:
    triggers:
      - schedule:
          cron: "0 13 * * 1"
          filters:
            branches:
              only: 
              - develop
    jobs:
    - windows-build:
        context: slack-secrets
  daily:
    triggers:
      - schedule:
          cron: "0 13 * * *"
          filters:
            branches:
              only: 
              - develop
    jobs: 
    - linux-build:
        context: slack-secrets




